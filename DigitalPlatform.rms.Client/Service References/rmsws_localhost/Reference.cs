//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DigitalPlatform.rms.Client.rmsws_localhost {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Result", Namespace="http://dp2003.com/dp2kernel/")]
    [System.SerializableAttribute()]
    public partial class Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DigitalPlatform.rms.Client.rmsws_localhost.ErrorCodeValue ErrorCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DigitalPlatform.rms.Client.rmsws_localhost.ErrorCodeValue ErrorCode {
            get {
                return this.ErrorCodeField;
            }
            set {
                if ((this.ErrorCodeField.Equals(value) != true)) {
                    this.ErrorCodeField = value;
                    this.RaisePropertyChanged("ErrorCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorString {
            get {
                return this.ErrorStringField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorStringField, value) != true)) {
                    this.ErrorStringField = value;
                    this.RaisePropertyChanged("ErrorString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long Value {
            get {
                return this.ValueField;
            }
            set {
                if ((this.ValueField.Equals(value) != true)) {
                    this.ValueField = value;
                    this.RaisePropertyChanged("Value");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ErrorCodeValue", Namespace="http://dp2003.com/dp2kernel/")]
    public enum ErrorCodeValue : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NoError = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CommonError = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotLogin = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserNameEmpty = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UserNameOrPasswordMismatch = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotHasEnoughRights = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TimestampMismatch = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFound = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        EmptyContent = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFoundDb = 12,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PathError = 14,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartNotFound = 15,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ExistDbInfo = 16,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadyExist = 17,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AlreadyExistOtherType = 18,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ApplicationStartError = 19,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFoundSubRes = 20,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Canceled = 21,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AccessDenied = 22,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        PartialDenied = 23,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        NotFoundObjectFile = 24,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Compressed = 25,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestError = 100,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        RequestTimeOut = 112,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Record", Namespace="http://dp2003.com/dp2kernel/")]
    [System.SerializableAttribute()]
    public partial class Record : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ColsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DigitalPlatform.rms.Client.rmsws_localhost.KeyFrom[] KeysField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DigitalPlatform.rms.Client.rmsws_localhost.RecordBody RecordBodyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Cols {
            get {
                return this.ColsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColsField, value) != true)) {
                    this.ColsField = value;
                    this.RaisePropertyChanged("Cols");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DigitalPlatform.rms.Client.rmsws_localhost.KeyFrom[] Keys {
            get {
                return this.KeysField;
            }
            set {
                if ((object.ReferenceEquals(this.KeysField, value) != true)) {
                    this.KeysField = value;
                    this.RaisePropertyChanged("Keys");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DigitalPlatform.rms.Client.rmsws_localhost.RecordBody RecordBody {
            get {
                return this.RecordBodyField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordBodyField, value) != true)) {
                    this.RecordBodyField = value;
                    this.RaisePropertyChanged("RecordBody");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RecordBody", Namespace="http://dp2003.com/dp2kernel/")]
    [System.SerializableAttribute()]
    public partial class RecordBody : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetadataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DigitalPlatform.rms.Client.rmsws_localhost.Result ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] TimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XmlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Metadata {
            get {
                return this.MetadataField;
            }
            set {
                if ((object.ReferenceEquals(this.MetadataField, value) != true)) {
                    this.MetadataField = value;
                    this.RaisePropertyChanged("Metadata");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Timestamp {
            get {
                return this.TimestampField;
            }
            set {
                if ((object.ReferenceEquals(this.TimestampField, value) != true)) {
                    this.TimestampField = value;
                    this.RaisePropertyChanged("Timestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Xml {
            get {
                return this.XmlField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlField, value) != true)) {
                    this.XmlField = value;
                    this.RaisePropertyChanged("Xml");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyFrom", Namespace="http://dp2003.com/dp2kernel/")]
    [System.SerializableAttribute()]
    public partial class KeyFrom : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LogicField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string From {
            get {
                return this.FromField;
            }
            set {
                if ((object.ReferenceEquals(this.FromField, value) != true)) {
                    this.FromField = value;
                    this.RaisePropertyChanged("From");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Logic {
            get {
                return this.LogicField;
            }
            set {
                if ((object.ReferenceEquals(this.LogicField, value) != true)) {
                    this.LogicField = value;
                    this.RaisePropertyChanged("Logic");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ResInfoItem", Namespace="http://dp2003.com/dp2kernel/")]
    [System.SerializableAttribute()]
    public partial class ResInfoItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] NamesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StyleField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeStringField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasChildren {
            get {
                return this.HasChildrenField;
            }
            set {
                if ((this.HasChildrenField.Equals(value) != true)) {
                    this.HasChildrenField = value;
                    this.RaisePropertyChanged("HasChildren");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Names {
            get {
                return this.NamesField;
            }
            set {
                if ((object.ReferenceEquals(this.NamesField, value) != true)) {
                    this.NamesField = value;
                    this.RaisePropertyChanged("Names");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Style {
            get {
                return this.StyleField;
            }
            set {
                if ((this.StyleField.Equals(value) != true)) {
                    this.StyleField = value;
                    this.RaisePropertyChanged("Style");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeString {
            get {
                return this.TypeStringField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeStringField, value) != true)) {
                    this.TypeStringField = value;
                    this.RaisePropertyChanged("TypeString");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RichRecord", Namespace="http://dp2003.com/dp2kernel/")]
    [System.SerializableAttribute()]
    public partial class RichRecord : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ColsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DigitalPlatform.rms.Client.rmsws_localhost.Result ResultField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string XmlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] baTimestampField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string strMetadataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Cols {
            get {
                return this.ColsField;
            }
            set {
                if ((object.ReferenceEquals(this.ColsField, value) != true)) {
                    this.ColsField = value;
                    this.RaisePropertyChanged("Cols");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Path {
            get {
                return this.PathField;
            }
            set {
                if ((object.ReferenceEquals(this.PathField, value) != true)) {
                    this.PathField = value;
                    this.RaisePropertyChanged("Path");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                return this.ResultField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultField, value) != true)) {
                    this.ResultField = value;
                    this.RaisePropertyChanged("Result");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Xml {
            get {
                return this.XmlField;
            }
            set {
                if ((object.ReferenceEquals(this.XmlField, value) != true)) {
                    this.XmlField = value;
                    this.RaisePropertyChanged("Xml");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] baTimestamp {
            get {
                return this.baTimestampField;
            }
            set {
                if ((object.ReferenceEquals(this.baTimestampField, value) != true)) {
                    this.baTimestampField = value;
                    this.RaisePropertyChanged("baTimestamp");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string strMetadata {
            get {
                return this.strMetadataField;
            }
            set {
                if ((object.ReferenceEquals(this.strMetadataField, value) != true)) {
                    this.strMetadataField = value;
                    this.RaisePropertyChanged("strMetadata");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="KeyInfo", Namespace="http://dp2003.com/dp2kernel/")]
    [System.SerializableAttribute()]
    public partial class KeyInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FromValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string KeyNoProcessField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromName {
            get {
                return this.FromNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FromNameField, value) != true)) {
                    this.FromNameField = value;
                    this.RaisePropertyChanged("FromName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FromValue {
            get {
                return this.FromValueField;
            }
            set {
                if ((object.ReferenceEquals(this.FromValueField, value) != true)) {
                    this.FromValueField = value;
                    this.RaisePropertyChanged("FromValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key {
            get {
                return this.KeyField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyField, value) != true)) {
                    this.KeyField = value;
                    this.RaisePropertyChanged("Key");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string KeyNoProcess {
            get {
                return this.KeyNoProcessField;
            }
            set {
                if ((object.ReferenceEquals(this.KeyNoProcessField, value) != true)) {
                    this.KeyNoProcessField = value;
                    this.RaisePropertyChanged("KeyNoProcess");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Num {
            get {
                return this.NumField;
            }
            set {
                if ((object.ReferenceEquals(this.NumField, value) != true)) {
                    this.NumField = value;
                    this.RaisePropertyChanged("Num");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="TaskInfo", Namespace="http://dp2003.com/dp2kernel/")]
    [System.SerializableAttribute()]
    public partial class TaskInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MaxResultBytesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ProgressTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ResultOffsetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ResultTextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ResultTotalLengthField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long ResultVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private DigitalPlatform.rms.Client.rmsws_localhost.BatchTaskStartInfo StartInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ID {
            get {
                return this.IDField;
            }
            set {
                if ((object.ReferenceEquals(this.IDField, value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MaxResultBytes {
            get {
                return this.MaxResultBytesField;
            }
            set {
                if ((this.MaxResultBytesField.Equals(value) != true)) {
                    this.MaxResultBytesField = value;
                    this.RaisePropertyChanged("MaxResultBytes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ProgressText {
            get {
                return this.ProgressTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ProgressTextField, value) != true)) {
                    this.ProgressTextField = value;
                    this.RaisePropertyChanged("ProgressText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ResultOffset {
            get {
                return this.ResultOffsetField;
            }
            set {
                if ((this.ResultOffsetField.Equals(value) != true)) {
                    this.ResultOffsetField = value;
                    this.RaisePropertyChanged("ResultOffset");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ResultText {
            get {
                return this.ResultTextField;
            }
            set {
                if ((object.ReferenceEquals(this.ResultTextField, value) != true)) {
                    this.ResultTextField = value;
                    this.RaisePropertyChanged("ResultText");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ResultTotalLength {
            get {
                return this.ResultTotalLengthField;
            }
            set {
                if ((this.ResultTotalLengthField.Equals(value) != true)) {
                    this.ResultTotalLengthField = value;
                    this.RaisePropertyChanged("ResultTotalLength");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long ResultVersion {
            get {
                return this.ResultVersionField;
            }
            set {
                if ((this.ResultVersionField.Equals(value) != true)) {
                    this.ResultVersionField = value;
                    this.RaisePropertyChanged("ResultVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public DigitalPlatform.rms.Client.rmsws_localhost.BatchTaskStartInfo StartInfo {
            get {
                return this.StartInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.StartInfoField, value) != true)) {
                    this.StartInfoField = value;
                    this.RaisePropertyChanged("StartInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string State {
            get {
                return this.StateField;
            }
            set {
                if ((object.ReferenceEquals(this.StateField, value) != true)) {
                    this.StateField = value;
                    this.RaisePropertyChanged("State");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BatchTaskStartInfo", Namespace="http://dp2003.com/dp2kernel/")]
    [System.SerializableAttribute()]
    public partial class BatchTaskStartInfo : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BreakPointField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ParamField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StartField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BreakPoint {
            get {
                return this.BreakPointField;
            }
            set {
                if ((object.ReferenceEquals(this.BreakPointField, value) != true)) {
                    this.BreakPointField = value;
                    this.RaisePropertyChanged("BreakPoint");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Count {
            get {
                return this.CountField;
            }
            set {
                if ((object.ReferenceEquals(this.CountField, value) != true)) {
                    this.CountField = value;
                    this.RaisePropertyChanged("Count");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Param {
            get {
                return this.ParamField;
            }
            set {
                if ((object.ReferenceEquals(this.ParamField, value) != true)) {
                    this.ParamField = value;
                    this.RaisePropertyChanged("Param");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Start {
            get {
                return this.StartField;
            }
            set {
                if ((object.ReferenceEquals(this.StartField, value) != true)) {
                    this.StartField = value;
                    this.RaisePropertyChanged("Start");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://dp2003.com/dp2kernel/", ConfigurationName="rmsws_localhost.KernelService", SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface KernelService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/DoTest", ReplyAction="http://dp2003.com/dp2kernel/KernelService/DoTestResponse")]
        int DoTest(string strText);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/DoTest", ReplyAction="http://dp2003.com/dp2kernel/KernelService/DoTestResponse")]
        System.IAsyncResult BeginDoTest(string strText, System.AsyncCallback callback, object asyncState);
        
        int EndDoTest(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/GetVersion", ReplyAction="http://dp2003.com/dp2kernel/KernelService/GetVersionResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result GetVersion();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/GetVersion", ReplyAction="http://dp2003.com/dp2kernel/KernelService/GetVersionResponse")]
        System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndGetVersion(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/Login", ReplyAction="http://dp2003.com/dp2kernel/KernelService/LoginResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result Login(string strUserName, string strPassword);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/Login", ReplyAction="http://dp2003.com/dp2kernel/KernelService/LoginResponse")]
        System.IAsyncResult BeginLogin(string strUserName, string strPassword, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndLogin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, Action="http://dp2003.com/dp2kernel/KernelService/Logout", ReplyAction="http://dp2003.com/dp2kernel/KernelService/LogoutResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result Logout();
        
        [System.ServiceModel.OperationContractAttribute(IsInitiating=false, AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/Logout", ReplyAction="http://dp2003.com/dp2kernel/KernelService/LogoutResponse")]
        System.IAsyncResult BeginLogout(System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndLogout(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/Search", ReplyAction="http://dp2003.com/dp2kernel/KernelService/SearchResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result Search(string strQuery, string strResultSetName, string strOutputStyle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/Search", ReplyAction="http://dp2003.com/dp2kernel/KernelService/SearchResponse")]
        System.IAsyncResult BeginSearch(string strQuery, string strResultSetName, string strOutputStyle, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndSearch(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/SearchEx", ReplyAction="http://dp2003.com/dp2kernel/KernelService/SearchExResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result SearchEx(out DigitalPlatform.rms.Client.rmsws_localhost.Record[] records, string strQuery, string strResultSetName, string strSearchStyle, long lRecordCount, string strLang, string strRecordStyle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/SearchEx", ReplyAction="http://dp2003.com/dp2kernel/KernelService/SearchExResponse")]
        System.IAsyncResult BeginSearchEx(string strQuery, string strResultSetName, string strSearchStyle, long lRecordCount, string strLang, string strRecordStyle, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndSearchEx(out DigitalPlatform.rms.Client.rmsws_localhost.Record[] records, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, Action="http://dp2003.com/dp2kernel/KernelService/Stop")]
        void Stop();
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsInitiating=false, AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/Stop")]
        System.IAsyncResult BeginStop(System.AsyncCallback callback, object asyncState);
        
        void EndStop(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/ChangePassword", ReplyAction="http://dp2003.com/dp2kernel/KernelService/ChangePasswordResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result ChangePassword(string strNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/ChangePassword", ReplyAction="http://dp2003.com/dp2kernel/KernelService/ChangePasswordResponse")]
        System.IAsyncResult BeginChangePassword(string strNewPassword, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndChangePassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/ChangeOtherPassword", ReplyAction="http://dp2003.com/dp2kernel/KernelService/ChangeOtherPasswordResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result ChangeOtherPassword(string strUserName, string strNewPassword);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/ChangeOtherPassword", ReplyAction="http://dp2003.com/dp2kernel/KernelService/ChangeOtherPasswordResponse")]
        System.IAsyncResult BeginChangeOtherPassword(string strUserName, string strNewPassword, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndChangeOtherPassword(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/Dir", ReplyAction="http://dp2003.com/dp2kernel/KernelService/DirResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result Dir(out DigitalPlatform.rms.Client.rmsws_localhost.ResInfoItem[] items, string strResPath, long lStart, long lLength, string strLang, string strStyle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/Dir", ReplyAction="http://dp2003.com/dp2kernel/KernelService/DirResponse")]
        System.IAsyncResult BeginDir(string strResPath, long lStart, long lLength, string strLang, string strStyle, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndDir(out DigitalPlatform.rms.Client.rmsws_localhost.ResInfoItem[] items, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/InitializeDb", ReplyAction="http://dp2003.com/dp2kernel/KernelService/InitializeDbResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result InitializeDb(string strDbName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/InitializeDb", ReplyAction="http://dp2003.com/dp2kernel/KernelService/InitializeDbResponse")]
        System.IAsyncResult BeginInitializeDb(string strDbName, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndInitializeDb(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/RefreshDb", ReplyAction="http://dp2003.com/dp2kernel/KernelService/RefreshDbResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result RefreshDb(string strAction, string strDbName, bool bClearAllKeyTables);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/RefreshDb", ReplyAction="http://dp2003.com/dp2kernel/KernelService/RefreshDbResponse")]
        System.IAsyncResult BeginRefreshDb(string strAction, string strDbName, bool bClearAllKeyTables, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndRefreshDb(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/GetRecords", ReplyAction="http://dp2003.com/dp2kernel/KernelService/GetRecordsResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result GetRecords(out DigitalPlatform.rms.Client.rmsws_localhost.Record[] records, string strResultSetName, long lStart, long lLength, string strLang, string strStyle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/GetRecords", ReplyAction="http://dp2003.com/dp2kernel/KernelService/GetRecordsResponse")]
        System.IAsyncResult BeginGetRecords(string strResultSetName, long lStart, long lLength, string strLang, string strStyle, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndGetRecords(out DigitalPlatform.rms.Client.rmsws_localhost.Record[] records, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/GetBrowse", ReplyAction="http://dp2003.com/dp2kernel/KernelService/GetBrowseResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result GetBrowse(out DigitalPlatform.rms.Client.rmsws_localhost.Record[] records, string[] paths, string strStyle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/GetBrowse", ReplyAction="http://dp2003.com/dp2kernel/KernelService/GetBrowseResponse")]
        System.IAsyncResult BeginGetBrowse(string[] paths, string strStyle, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndGetBrowse(out DigitalPlatform.rms.Client.rmsws_localhost.Record[] records, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/GetRichRecords", ReplyAction="http://dp2003.com/dp2kernel/KernelService/GetRichRecordsResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result GetRichRecords(out DigitalPlatform.rms.Client.rmsws_localhost.RichRecord[] richRecords, string strResultSetName, string strRanges, string strLang, string strStyle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/GetRichRecords", ReplyAction="http://dp2003.com/dp2kernel/KernelService/GetRichRecordsResponse")]
        System.IAsyncResult BeginGetRichRecords(string strResultSetName, string strRanges, string strLang, string strStyle, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndGetRichRecords(out DigitalPlatform.rms.Client.rmsws_localhost.RichRecord[] richRecords, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/GetRes", ReplyAction="http://dp2003.com/dp2kernel/KernelService/GetResResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result GetRes(out byte[] baContent, out string strMetadata, out string strOutputResPath, out byte[] baOutputTimestamp, string strResPath, long nStart, int nLength, string strStyle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/GetRes", ReplyAction="http://dp2003.com/dp2kernel/KernelService/GetResResponse")]
        System.IAsyncResult BeginGetRes(string strResPath, long nStart, int nLength, string strStyle, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndGetRes(out byte[] baContent, out string strMetadata, out string strOutputResPath, out byte[] baOutputTimestamp, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/WriteRes", ReplyAction="http://dp2003.com/dp2kernel/KernelService/WriteResResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result WriteRes(out string strOutputResPath, out byte[] baOutputTimestamp, string strResPath, string strRanges, long lTotalLength, byte[] baContent, string strMetadata, string strStyle, byte[] baInputTimestamp);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/WriteRes", ReplyAction="http://dp2003.com/dp2kernel/KernelService/WriteResResponse")]
        System.IAsyncResult BeginWriteRes(string strResPath, string strRanges, long lTotalLength, byte[] baContent, string strMetadata, string strStyle, byte[] baInputTimestamp, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndWriteRes(out string strOutputResPath, out byte[] baOutputTimestamp, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/WriteRecords", ReplyAction="http://dp2003.com/dp2kernel/KernelService/WriteRecordsResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result WriteRecords(out DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[] results, DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[] inputs, string strStyle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/WriteRecords", ReplyAction="http://dp2003.com/dp2kernel/KernelService/WriteRecordsResponse")]
        System.IAsyncResult BeginWriteRecords(DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[] inputs, string strStyle, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndWriteRecords(out DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[] results, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/DeleteRes", ReplyAction="http://dp2003.com/dp2kernel/KernelService/DeleteResResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result DeleteRes(out byte[] baOutputTimestamp, string strResPath, byte[] baInputTimestamp, string strStyle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/DeleteRes", ReplyAction="http://dp2003.com/dp2kernel/KernelService/DeleteResResponse")]
        System.IAsyncResult BeginDeleteRes(string strResPath, byte[] baInputTimestamp, string strStyle, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndDeleteRes(out byte[] baOutputTimestamp, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/RebuildResKeys", ReplyAction="http://dp2003.com/dp2kernel/KernelService/RebuildResKeysResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result RebuildResKeys(out string strOutputResPath, string strResPath, string strStyle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/RebuildResKeys", ReplyAction="http://dp2003.com/dp2kernel/KernelService/RebuildResKeysResponse")]
        System.IAsyncResult BeginRebuildResKeys(string strResPath, string strStyle, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndRebuildResKeys(out string strOutputResPath, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/SetDbInfo", ReplyAction="http://dp2003.com/dp2kernel/KernelService/SetDbInfoResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result SetDbInfo(string strDbName, DigitalPlatform.rms.LogicNameItem[] logicNames, string strType, string strSqlDbName, string strKeysText, string strBrowseText);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/SetDbInfo", ReplyAction="http://dp2003.com/dp2kernel/KernelService/SetDbInfoResponse")]
        System.IAsyncResult BeginSetDbInfo(string strDbName, DigitalPlatform.rms.LogicNameItem[] logicNames, string strType, string strSqlDbName, string strKeysText, string strBrowseText, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndSetDbInfo(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/GetDbInfo", ReplyAction="http://dp2003.com/dp2kernel/KernelService/GetDbInfoResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result GetDbInfo(out DigitalPlatform.rms.LogicNameItem[] logicNames, out string strType, out string strSqlDbName, out string strKeysText, out string strBrowseText, string strDbName, string strStyle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/GetDbInfo", ReplyAction="http://dp2003.com/dp2kernel/KernelService/GetDbInfoResponse")]
        System.IAsyncResult BeginGetDbInfo(string strDbName, string strStyle, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndGetDbInfo(out DigitalPlatform.rms.LogicNameItem[] logicNames, out string strType, out string strSqlDbName, out string strKeysText, out string strBrowseText, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/CreateDb", ReplyAction="http://dp2003.com/dp2kernel/KernelService/CreateDbResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result CreateDb(DigitalPlatform.rms.LogicNameItem[] logicNames, string strType, string strSqlDbName, string strKeysDefault, string strBrowseDefault);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/CreateDb", ReplyAction="http://dp2003.com/dp2kernel/KernelService/CreateDbResponse")]
        System.IAsyncResult BeginCreateDb(DigitalPlatform.rms.LogicNameItem[] logicNames, string strType, string strSqlDbName, string strKeysDefault, string strBrowseDefault, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndCreateDb(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/DeleteDb", ReplyAction="http://dp2003.com/dp2kernel/KernelService/DeleteDbResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result DeleteDb(string strDbName);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/DeleteDb", ReplyAction="http://dp2003.com/dp2kernel/KernelService/DeleteDbResponse")]
        System.IAsyncResult BeginDeleteDb(string strDbName, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndDeleteDb(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/CreateKeys", ReplyAction="http://dp2003.com/dp2kernel/KernelService/CreateKeysResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result CreateKeys(out DigitalPlatform.rms.Client.rmsws_localhost.KeyInfo[] keys, string strXml, string strRecPath, int lStart, int lLength, string strLang);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/CreateKeys", ReplyAction="http://dp2003.com/dp2kernel/KernelService/CreateKeysResponse")]
        System.IAsyncResult BeginCreateKeys(string strXml, string strRecPath, int lStart, int lLength, string strLang, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndCreateKeys(out DigitalPlatform.rms.Client.rmsws_localhost.KeyInfo[] keys, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/CopyRecord", ReplyAction="http://dp2003.com/dp2kernel/KernelService/CopyRecordResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result CopyRecord(out string strIdChangeList, out string strOutputRecordPath, out byte[] baOutputRecordTimestamp, string strOriginRecordPath, string strTargetRecordPath, bool bDeleteOriginRecord, string strMergeStyle);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/CopyRecord", ReplyAction="http://dp2003.com/dp2kernel/KernelService/CopyRecordResponse")]
        System.IAsyncResult BeginCopyRecord(string strOriginRecordPath, string strTargetRecordPath, bool bDeleteOriginRecord, string strMergeStyle, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndCopyRecord(out string strIdChangeList, out string strOutputRecordPath, out byte[] baOutputRecordTimestamp, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/BatchTask", ReplyAction="http://dp2003.com/dp2kernel/KernelService/BatchTaskResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result BatchTask(out DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo[] results, string strName, string strAction, DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo info);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/BatchTask", ReplyAction="http://dp2003.com/dp2kernel/KernelService/BatchTaskResponse")]
        System.IAsyncResult BeginBatchTask(string strName, string strAction, DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo info, System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndBatchTask(out DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo[] results, System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://dp2003.com/dp2kernel/KernelService/GetProperty", ReplyAction="http://dp2003.com/dp2kernel/KernelService/GetPropertyResponse")]
        DigitalPlatform.rms.Client.rmsws_localhost.Result GetProperty(out string strProperty);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://dp2003.com/dp2kernel/KernelService/GetProperty", ReplyAction="http://dp2003.com/dp2kernel/KernelService/GetPropertyResponse")]
        System.IAsyncResult BeginGetProperty(System.AsyncCallback callback, object asyncState);
        
        DigitalPlatform.rms.Client.rmsws_localhost.Result EndGetProperty(out string strProperty, System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface KernelServiceChannel : DigitalPlatform.rms.Client.rmsws_localhost.KernelService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DoTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DoTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public int Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LogoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public LogoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SearchExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SearchExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Record[] records {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Record[])(this.results[0]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChangeOtherPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ChangeOtherPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DirCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DirCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.ResInfoItem[] items {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.ResInfoItem[])(this.results[0]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class InitializeDbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public InitializeDbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RefreshDbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RefreshDbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Record[] records {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Record[])(this.results[0]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetBrowseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetBrowseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Record[] records {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Record[])(this.results[0]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetRichRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetRichRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.RichRecord[] richRecords {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.RichRecord[])(this.results[0]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetResCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetResCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] baContent {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public string strMetadata {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public string strOutputResPath {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        public byte[] baOutputTimestamp {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[3]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[4]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WriteResCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public WriteResCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strOutputResPath {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public byte[] baOutputTimestamp {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[2]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WriteRecordsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results1;
        
        public WriteRecordsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results1 = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[] results {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[])(this.results1[0]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results1[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteResCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteResCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public byte[] baOutputTimestamp {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RebuildResKeysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RebuildResKeysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strOutputResPath {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SetDbInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SetDbInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetDbInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetDbInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.LogicNameItem[] logicNames {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.LogicNameItem[])(this.results[0]));
            }
        }
        
        public string strType {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public string strSqlDbName {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        public string strKeysText {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        public string strBrowseText {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[5]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateDbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateDbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteDbCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteDbCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateKeysCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateKeysCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.KeyInfo[] keys {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.KeyInfo[])(this.results[0]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CopyRecordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CopyRecordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strIdChangeList {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public string strOutputRecordPath {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        public byte[] baOutputRecordTimestamp {
            get {
                base.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[2]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[3]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BatchTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results1;
        
        public BatchTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results1 = results;
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo[] results {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo[])(this.results1[0]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results1[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPropertyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPropertyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string strProperty {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((DigitalPlatform.rms.Client.rmsws_localhost.Result)(this.results[1]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class KernelServiceClient : System.ServiceModel.ClientBase<DigitalPlatform.rms.Client.rmsws_localhost.KernelService>, DigitalPlatform.rms.Client.rmsws_localhost.KernelService {
        
        private BeginOperationDelegate onBeginDoTestDelegate;
        
        private EndOperationDelegate onEndDoTestDelegate;
        
        private System.Threading.SendOrPostCallback onDoTestCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetVersionDelegate;
        
        private EndOperationDelegate onEndGetVersionDelegate;
        
        private System.Threading.SendOrPostCallback onGetVersionCompletedDelegate;
        
        private BeginOperationDelegate onBeginLoginDelegate;
        
        private EndOperationDelegate onEndLoginDelegate;
        
        private System.Threading.SendOrPostCallback onLoginCompletedDelegate;
        
        private BeginOperationDelegate onBeginLogoutDelegate;
        
        private EndOperationDelegate onEndLogoutDelegate;
        
        private System.Threading.SendOrPostCallback onLogoutCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchDelegate;
        
        private EndOperationDelegate onEndSearchDelegate;
        
        private System.Threading.SendOrPostCallback onSearchCompletedDelegate;
        
        private BeginOperationDelegate onBeginSearchExDelegate;
        
        private EndOperationDelegate onEndSearchExDelegate;
        
        private System.Threading.SendOrPostCallback onSearchExCompletedDelegate;
        
        private BeginOperationDelegate onBeginStopDelegate;
        
        private EndOperationDelegate onEndStopDelegate;
        
        private System.Threading.SendOrPostCallback onStopCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangePasswordDelegate;
        
        private EndOperationDelegate onEndChangePasswordDelegate;
        
        private System.Threading.SendOrPostCallback onChangePasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeOtherPasswordDelegate;
        
        private EndOperationDelegate onEndChangeOtherPasswordDelegate;
        
        private System.Threading.SendOrPostCallback onChangeOtherPasswordCompletedDelegate;
        
        private BeginOperationDelegate onBeginDirDelegate;
        
        private EndOperationDelegate onEndDirDelegate;
        
        private System.Threading.SendOrPostCallback onDirCompletedDelegate;
        
        private BeginOperationDelegate onBeginInitializeDbDelegate;
        
        private EndOperationDelegate onEndInitializeDbDelegate;
        
        private System.Threading.SendOrPostCallback onInitializeDbCompletedDelegate;
        
        private BeginOperationDelegate onBeginRefreshDbDelegate;
        
        private EndOperationDelegate onEndRefreshDbDelegate;
        
        private System.Threading.SendOrPostCallback onRefreshDbCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRecordsDelegate;
        
        private EndOperationDelegate onEndGetRecordsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRecordsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetBrowseDelegate;
        
        private EndOperationDelegate onEndGetBrowseDelegate;
        
        private System.Threading.SendOrPostCallback onGetBrowseCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetRichRecordsDelegate;
        
        private EndOperationDelegate onEndGetRichRecordsDelegate;
        
        private System.Threading.SendOrPostCallback onGetRichRecordsCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetResDelegate;
        
        private EndOperationDelegate onEndGetResDelegate;
        
        private System.Threading.SendOrPostCallback onGetResCompletedDelegate;
        
        private BeginOperationDelegate onBeginWriteResDelegate;
        
        private EndOperationDelegate onEndWriteResDelegate;
        
        private System.Threading.SendOrPostCallback onWriteResCompletedDelegate;
        
        private BeginOperationDelegate onBeginWriteRecordsDelegate;
        
        private EndOperationDelegate onEndWriteRecordsDelegate;
        
        private System.Threading.SendOrPostCallback onWriteRecordsCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteResDelegate;
        
        private EndOperationDelegate onEndDeleteResDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteResCompletedDelegate;
        
        private BeginOperationDelegate onBeginRebuildResKeysDelegate;
        
        private EndOperationDelegate onEndRebuildResKeysDelegate;
        
        private System.Threading.SendOrPostCallback onRebuildResKeysCompletedDelegate;
        
        private BeginOperationDelegate onBeginSetDbInfoDelegate;
        
        private EndOperationDelegate onEndSetDbInfoDelegate;
        
        private System.Threading.SendOrPostCallback onSetDbInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetDbInfoDelegate;
        
        private EndOperationDelegate onEndGetDbInfoDelegate;
        
        private System.Threading.SendOrPostCallback onGetDbInfoCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateDbDelegate;
        
        private EndOperationDelegate onEndCreateDbDelegate;
        
        private System.Threading.SendOrPostCallback onCreateDbCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDbDelegate;
        
        private EndOperationDelegate onEndDeleteDbDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteDbCompletedDelegate;
        
        private BeginOperationDelegate onBeginCreateKeysDelegate;
        
        private EndOperationDelegate onEndCreateKeysDelegate;
        
        private System.Threading.SendOrPostCallback onCreateKeysCompletedDelegate;
        
        private BeginOperationDelegate onBeginCopyRecordDelegate;
        
        private EndOperationDelegate onEndCopyRecordDelegate;
        
        private System.Threading.SendOrPostCallback onCopyRecordCompletedDelegate;
        
        private BeginOperationDelegate onBeginBatchTaskDelegate;
        
        private EndOperationDelegate onEndBatchTaskDelegate;
        
        private System.Threading.SendOrPostCallback onBatchTaskCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPropertyDelegate;
        
        private EndOperationDelegate onEndGetPropertyDelegate;
        
        private System.Threading.SendOrPostCallback onGetPropertyCompletedDelegate;
        
        public KernelServiceClient() {
        }
        
        public KernelServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public KernelServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KernelServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public KernelServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<DoTestCompletedEventArgs> DoTestCompleted;
        
        public event System.EventHandler<GetVersionCompletedEventArgs> GetVersionCompleted;
        
        public event System.EventHandler<LoginCompletedEventArgs> LoginCompleted;
        
        public event System.EventHandler<LogoutCompletedEventArgs> LogoutCompleted;
        
        public event System.EventHandler<SearchCompletedEventArgs> SearchCompleted;
        
        public event System.EventHandler<SearchExCompletedEventArgs> SearchExCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StopCompleted;
        
        public event System.EventHandler<ChangePasswordCompletedEventArgs> ChangePasswordCompleted;
        
        public event System.EventHandler<ChangeOtherPasswordCompletedEventArgs> ChangeOtherPasswordCompleted;
        
        public event System.EventHandler<DirCompletedEventArgs> DirCompleted;
        
        public event System.EventHandler<InitializeDbCompletedEventArgs> InitializeDbCompleted;
        
        public event System.EventHandler<RefreshDbCompletedEventArgs> RefreshDbCompleted;
        
        public event System.EventHandler<GetRecordsCompletedEventArgs> GetRecordsCompleted;
        
        public event System.EventHandler<GetBrowseCompletedEventArgs> GetBrowseCompleted;
        
        public event System.EventHandler<GetRichRecordsCompletedEventArgs> GetRichRecordsCompleted;
        
        public event System.EventHandler<GetResCompletedEventArgs> GetResCompleted;
        
        public event System.EventHandler<WriteResCompletedEventArgs> WriteResCompleted;
        
        public event System.EventHandler<WriteRecordsCompletedEventArgs> WriteRecordsCompleted;
        
        public event System.EventHandler<DeleteResCompletedEventArgs> DeleteResCompleted;
        
        public event System.EventHandler<RebuildResKeysCompletedEventArgs> RebuildResKeysCompleted;
        
        public event System.EventHandler<SetDbInfoCompletedEventArgs> SetDbInfoCompleted;
        
        public event System.EventHandler<GetDbInfoCompletedEventArgs> GetDbInfoCompleted;
        
        public event System.EventHandler<CreateDbCompletedEventArgs> CreateDbCompleted;
        
        public event System.EventHandler<DeleteDbCompletedEventArgs> DeleteDbCompleted;
        
        public event System.EventHandler<CreateKeysCompletedEventArgs> CreateKeysCompleted;
        
        public event System.EventHandler<CopyRecordCompletedEventArgs> CopyRecordCompleted;
        
        public event System.EventHandler<BatchTaskCompletedEventArgs> BatchTaskCompleted;
        
        public event System.EventHandler<GetPropertyCompletedEventArgs> GetPropertyCompleted;
        
        public int DoTest(string strText) {
            return base.Channel.DoTest(strText);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDoTest(string strText, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDoTest(strText, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public int EndDoTest(System.IAsyncResult result) {
            return base.Channel.EndDoTest(result);
        }
        
        private System.IAsyncResult OnBeginDoTest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strText = ((string)(inValues[0]));
            return this.BeginDoTest(strText, callback, asyncState);
        }
        
        private object[] OnEndDoTest(System.IAsyncResult result) {
            int retVal = this.EndDoTest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDoTestCompleted(object state) {
            if ((this.DoTestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DoTestCompleted(this, new DoTestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DoTestAsync(string strText) {
            this.DoTestAsync(strText, null);
        }
        
        public void DoTestAsync(string strText, object userState) {
            if ((this.onBeginDoTestDelegate == null)) {
                this.onBeginDoTestDelegate = new BeginOperationDelegate(this.OnBeginDoTest);
            }
            if ((this.onEndDoTestDelegate == null)) {
                this.onEndDoTestDelegate = new EndOperationDelegate(this.OnEndDoTest);
            }
            if ((this.onDoTestCompletedDelegate == null)) {
                this.onDoTestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDoTestCompleted);
            }
            base.InvokeAsync(this.onBeginDoTestDelegate, new object[] {
                        strText}, this.onEndDoTestDelegate, this.onDoTestCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result GetVersion() {
            return base.Channel.GetVersion();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetVersion(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetVersion(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndGetVersion(System.IAsyncResult result) {
            return base.Channel.EndGetVersion(result);
        }
        
        private System.IAsyncResult OnBeginGetVersion(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetVersion(callback, asyncState);
        }
        
        private object[] OnEndGetVersion(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndGetVersion(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetVersionCompleted(object state) {
            if ((this.GetVersionCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetVersionCompleted(this, new GetVersionCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetVersionAsync() {
            this.GetVersionAsync(null);
        }
        
        public void GetVersionAsync(object userState) {
            if ((this.onBeginGetVersionDelegate == null)) {
                this.onBeginGetVersionDelegate = new BeginOperationDelegate(this.OnBeginGetVersion);
            }
            if ((this.onEndGetVersionDelegate == null)) {
                this.onEndGetVersionDelegate = new EndOperationDelegate(this.OnEndGetVersion);
            }
            if ((this.onGetVersionCompletedDelegate == null)) {
                this.onGetVersionCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetVersionCompleted);
            }
            base.InvokeAsync(this.onBeginGetVersionDelegate, null, this.onEndGetVersionDelegate, this.onGetVersionCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Login(string strUserName, string strPassword) {
            return base.Channel.Login(strUserName, strPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogin(string strUserName, string strPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogin(strUserName, strPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndLogin(System.IAsyncResult result) {
            return base.Channel.EndLogin(result);
        }
        
        private System.IAsyncResult OnBeginLogin(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strUserName = ((string)(inValues[0]));
            string strPassword = ((string)(inValues[1]));
            return this.BeginLogin(strUserName, strPassword, callback, asyncState);
        }
        
        private object[] OnEndLogin(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndLogin(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLoginCompleted(object state) {
            if ((this.LoginCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LoginCompleted(this, new LoginCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LoginAsync(string strUserName, string strPassword) {
            this.LoginAsync(strUserName, strPassword, null);
        }
        
        public void LoginAsync(string strUserName, string strPassword, object userState) {
            if ((this.onBeginLoginDelegate == null)) {
                this.onBeginLoginDelegate = new BeginOperationDelegate(this.OnBeginLogin);
            }
            if ((this.onEndLoginDelegate == null)) {
                this.onEndLoginDelegate = new EndOperationDelegate(this.OnEndLogin);
            }
            if ((this.onLoginCompletedDelegate == null)) {
                this.onLoginCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLoginCompleted);
            }
            base.InvokeAsync(this.onBeginLoginDelegate, new object[] {
                        strUserName,
                        strPassword}, this.onEndLoginDelegate, this.onLoginCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Logout() {
            return base.Channel.Logout();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginLogout(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginLogout(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndLogout(System.IAsyncResult result) {
            return base.Channel.EndLogout(result);
        }
        
        private System.IAsyncResult OnBeginLogout(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginLogout(callback, asyncState);
        }
        
        private object[] OnEndLogout(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndLogout(result);
            return new object[] {
                    retVal};
        }
        
        private void OnLogoutCompleted(object state) {
            if ((this.LogoutCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.LogoutCompleted(this, new LogoutCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void LogoutAsync() {
            this.LogoutAsync(null);
        }
        
        public void LogoutAsync(object userState) {
            if ((this.onBeginLogoutDelegate == null)) {
                this.onBeginLogoutDelegate = new BeginOperationDelegate(this.OnBeginLogout);
            }
            if ((this.onEndLogoutDelegate == null)) {
                this.onEndLogoutDelegate = new EndOperationDelegate(this.OnEndLogout);
            }
            if ((this.onLogoutCompletedDelegate == null)) {
                this.onLogoutCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnLogoutCompleted);
            }
            base.InvokeAsync(this.onBeginLogoutDelegate, null, this.onEndLogoutDelegate, this.onLogoutCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Search(string strQuery, string strResultSetName, string strOutputStyle) {
            return base.Channel.Search(strQuery, strResultSetName, strOutputStyle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearch(string strQuery, string strResultSetName, string strOutputStyle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearch(strQuery, strResultSetName, strOutputStyle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndSearch(System.IAsyncResult result) {
            return base.Channel.EndSearch(result);
        }
        
        private System.IAsyncResult OnBeginSearch(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strQuery = ((string)(inValues[0]));
            string strResultSetName = ((string)(inValues[1]));
            string strOutputStyle = ((string)(inValues[2]));
            return this.BeginSearch(strQuery, strResultSetName, strOutputStyle, callback, asyncState);
        }
        
        private object[] OnEndSearch(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndSearch(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSearchCompleted(object state) {
            if ((this.SearchCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchCompleted(this, new SearchCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchAsync(string strQuery, string strResultSetName, string strOutputStyle) {
            this.SearchAsync(strQuery, strResultSetName, strOutputStyle, null);
        }
        
        public void SearchAsync(string strQuery, string strResultSetName, string strOutputStyle, object userState) {
            if ((this.onBeginSearchDelegate == null)) {
                this.onBeginSearchDelegate = new BeginOperationDelegate(this.OnBeginSearch);
            }
            if ((this.onEndSearchDelegate == null)) {
                this.onEndSearchDelegate = new EndOperationDelegate(this.OnEndSearch);
            }
            if ((this.onSearchCompletedDelegate == null)) {
                this.onSearchCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchCompleted);
            }
            base.InvokeAsync(this.onBeginSearchDelegate, new object[] {
                        strQuery,
                        strResultSetName,
                        strOutputStyle}, this.onEndSearchDelegate, this.onSearchCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result SearchEx(out DigitalPlatform.rms.Client.rmsws_localhost.Record[] records, string strQuery, string strResultSetName, string strSearchStyle, long lRecordCount, string strLang, string strRecordStyle) {
            return base.Channel.SearchEx(out records, strQuery, strResultSetName, strSearchStyle, lRecordCount, strLang, strRecordStyle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSearchEx(string strQuery, string strResultSetName, string strSearchStyle, long lRecordCount, string strLang, string strRecordStyle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSearchEx(strQuery, strResultSetName, strSearchStyle, lRecordCount, strLang, strRecordStyle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndSearchEx(out DigitalPlatform.rms.Client.rmsws_localhost.Record[] records, System.IAsyncResult result) {
            return base.Channel.EndSearchEx(out records, result);
        }
        
        private System.IAsyncResult OnBeginSearchEx(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strQuery = ((string)(inValues[0]));
            string strResultSetName = ((string)(inValues[1]));
            string strSearchStyle = ((string)(inValues[2]));
            long lRecordCount = ((long)(inValues[3]));
            string strLang = ((string)(inValues[4]));
            string strRecordStyle = ((string)(inValues[5]));
            return this.BeginSearchEx(strQuery, strResultSetName, strSearchStyle, lRecordCount, strLang, strRecordStyle, callback, asyncState);
        }
        
        private object[] OnEndSearchEx(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.Record[] records = this.GetDefaultValueForInitialization<DigitalPlatform.rms.Client.rmsws_localhost.Record[]>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndSearchEx(out records, result);
            return new object[] {
                    records,
                    retVal};
        }
        
        private void OnSearchExCompleted(object state) {
            if ((this.SearchExCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SearchExCompleted(this, new SearchExCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SearchExAsync(string strQuery, string strResultSetName, string strSearchStyle, long lRecordCount, string strLang, string strRecordStyle) {
            this.SearchExAsync(strQuery, strResultSetName, strSearchStyle, lRecordCount, strLang, strRecordStyle, null);
        }
        
        public void SearchExAsync(string strQuery, string strResultSetName, string strSearchStyle, long lRecordCount, string strLang, string strRecordStyle, object userState) {
            if ((this.onBeginSearchExDelegate == null)) {
                this.onBeginSearchExDelegate = new BeginOperationDelegate(this.OnBeginSearchEx);
            }
            if ((this.onEndSearchExDelegate == null)) {
                this.onEndSearchExDelegate = new EndOperationDelegate(this.OnEndSearchEx);
            }
            if ((this.onSearchExCompletedDelegate == null)) {
                this.onSearchExCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSearchExCompleted);
            }
            base.InvokeAsync(this.onBeginSearchExDelegate, new object[] {
                        strQuery,
                        strResultSetName,
                        strSearchStyle,
                        lRecordCount,
                        strLang,
                        strRecordStyle}, this.onEndSearchExDelegate, this.onSearchExCompletedDelegate, userState);
        }
        
        public void Stop() {
            base.Channel.Stop();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginStop(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStop(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndStop(System.IAsyncResult result) {
            base.Channel.EndStop(result);
        }
        
        private System.IAsyncResult OnBeginStop(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginStop(callback, asyncState);
        }
        
        private object[] OnEndStop(System.IAsyncResult result) {
            this.EndStop(result);
            return null;
        }
        
        private void OnStopCompleted(object state) {
            if ((this.StopCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StopCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StopAsync() {
            this.StopAsync(null);
        }
        
        public void StopAsync(object userState) {
            if ((this.onBeginStopDelegate == null)) {
                this.onBeginStopDelegate = new BeginOperationDelegate(this.OnBeginStop);
            }
            if ((this.onEndStopDelegate == null)) {
                this.onEndStopDelegate = new EndOperationDelegate(this.OnEndStop);
            }
            if ((this.onStopCompletedDelegate == null)) {
                this.onStopCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStopCompleted);
            }
            base.InvokeAsync(this.onBeginStopDelegate, null, this.onEndStopDelegate, this.onStopCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result ChangePassword(string strNewPassword) {
            return base.Channel.ChangePassword(strNewPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangePassword(string strNewPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangePassword(strNewPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndChangePassword(System.IAsyncResult result) {
            return base.Channel.EndChangePassword(result);
        }
        
        private System.IAsyncResult OnBeginChangePassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strNewPassword = ((string)(inValues[0]));
            return this.BeginChangePassword(strNewPassword, callback, asyncState);
        }
        
        private object[] OnEndChangePassword(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndChangePassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangePasswordCompleted(object state) {
            if ((this.ChangePasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangePasswordCompleted(this, new ChangePasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangePasswordAsync(string strNewPassword) {
            this.ChangePasswordAsync(strNewPassword, null);
        }
        
        public void ChangePasswordAsync(string strNewPassword, object userState) {
            if ((this.onBeginChangePasswordDelegate == null)) {
                this.onBeginChangePasswordDelegate = new BeginOperationDelegate(this.OnBeginChangePassword);
            }
            if ((this.onEndChangePasswordDelegate == null)) {
                this.onEndChangePasswordDelegate = new EndOperationDelegate(this.OnEndChangePassword);
            }
            if ((this.onChangePasswordCompletedDelegate == null)) {
                this.onChangePasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangePasswordCompleted);
            }
            base.InvokeAsync(this.onBeginChangePasswordDelegate, new object[] {
                        strNewPassword}, this.onEndChangePasswordDelegate, this.onChangePasswordCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result ChangeOtherPassword(string strUserName, string strNewPassword) {
            return base.Channel.ChangeOtherPassword(strUserName, strNewPassword);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginChangeOtherPassword(string strUserName, string strNewPassword, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeOtherPassword(strUserName, strNewPassword, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndChangeOtherPassword(System.IAsyncResult result) {
            return base.Channel.EndChangeOtherPassword(result);
        }
        
        private System.IAsyncResult OnBeginChangeOtherPassword(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strUserName = ((string)(inValues[0]));
            string strNewPassword = ((string)(inValues[1]));
            return this.BeginChangeOtherPassword(strUserName, strNewPassword, callback, asyncState);
        }
        
        private object[] OnEndChangeOtherPassword(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndChangeOtherPassword(result);
            return new object[] {
                    retVal};
        }
        
        private void OnChangeOtherPasswordCompleted(object state) {
            if ((this.ChangeOtherPasswordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeOtherPasswordCompleted(this, new ChangeOtherPasswordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeOtherPasswordAsync(string strUserName, string strNewPassword) {
            this.ChangeOtherPasswordAsync(strUserName, strNewPassword, null);
        }
        
        public void ChangeOtherPasswordAsync(string strUserName, string strNewPassword, object userState) {
            if ((this.onBeginChangeOtherPasswordDelegate == null)) {
                this.onBeginChangeOtherPasswordDelegate = new BeginOperationDelegate(this.OnBeginChangeOtherPassword);
            }
            if ((this.onEndChangeOtherPasswordDelegate == null)) {
                this.onEndChangeOtherPasswordDelegate = new EndOperationDelegate(this.OnEndChangeOtherPassword);
            }
            if ((this.onChangeOtherPasswordCompletedDelegate == null)) {
                this.onChangeOtherPasswordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeOtherPasswordCompleted);
            }
            base.InvokeAsync(this.onBeginChangeOtherPasswordDelegate, new object[] {
                        strUserName,
                        strNewPassword}, this.onEndChangeOtherPasswordDelegate, this.onChangeOtherPasswordCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result Dir(out DigitalPlatform.rms.Client.rmsws_localhost.ResInfoItem[] items, string strResPath, long lStart, long lLength, string strLang, string strStyle) {
            return base.Channel.Dir(out items, strResPath, lStart, lLength, strLang, strStyle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDir(string strResPath, long lStart, long lLength, string strLang, string strStyle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDir(strResPath, lStart, lLength, strLang, strStyle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndDir(out DigitalPlatform.rms.Client.rmsws_localhost.ResInfoItem[] items, System.IAsyncResult result) {
            return base.Channel.EndDir(out items, result);
        }
        
        private System.IAsyncResult OnBeginDir(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strResPath = ((string)(inValues[0]));
            long lStart = ((long)(inValues[1]));
            long lLength = ((long)(inValues[2]));
            string strLang = ((string)(inValues[3]));
            string strStyle = ((string)(inValues[4]));
            return this.BeginDir(strResPath, lStart, lLength, strLang, strStyle, callback, asyncState);
        }
        
        private object[] OnEndDir(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.ResInfoItem[] items = this.GetDefaultValueForInitialization<DigitalPlatform.rms.Client.rmsws_localhost.ResInfoItem[]>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndDir(out items, result);
            return new object[] {
                    items,
                    retVal};
        }
        
        private void OnDirCompleted(object state) {
            if ((this.DirCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DirCompleted(this, new DirCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DirAsync(string strResPath, long lStart, long lLength, string strLang, string strStyle) {
            this.DirAsync(strResPath, lStart, lLength, strLang, strStyle, null);
        }
        
        public void DirAsync(string strResPath, long lStart, long lLength, string strLang, string strStyle, object userState) {
            if ((this.onBeginDirDelegate == null)) {
                this.onBeginDirDelegate = new BeginOperationDelegate(this.OnBeginDir);
            }
            if ((this.onEndDirDelegate == null)) {
                this.onEndDirDelegate = new EndOperationDelegate(this.OnEndDir);
            }
            if ((this.onDirCompletedDelegate == null)) {
                this.onDirCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDirCompleted);
            }
            base.InvokeAsync(this.onBeginDirDelegate, new object[] {
                        strResPath,
                        lStart,
                        lLength,
                        strLang,
                        strStyle}, this.onEndDirDelegate, this.onDirCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result InitializeDb(string strDbName) {
            return base.Channel.InitializeDb(strDbName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginInitializeDb(string strDbName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginInitializeDb(strDbName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndInitializeDb(System.IAsyncResult result) {
            return base.Channel.EndInitializeDb(result);
        }
        
        private System.IAsyncResult OnBeginInitializeDb(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strDbName = ((string)(inValues[0]));
            return this.BeginInitializeDb(strDbName, callback, asyncState);
        }
        
        private object[] OnEndInitializeDb(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndInitializeDb(result);
            return new object[] {
                    retVal};
        }
        
        private void OnInitializeDbCompleted(object state) {
            if ((this.InitializeDbCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.InitializeDbCompleted(this, new InitializeDbCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void InitializeDbAsync(string strDbName) {
            this.InitializeDbAsync(strDbName, null);
        }
        
        public void InitializeDbAsync(string strDbName, object userState) {
            if ((this.onBeginInitializeDbDelegate == null)) {
                this.onBeginInitializeDbDelegate = new BeginOperationDelegate(this.OnBeginInitializeDb);
            }
            if ((this.onEndInitializeDbDelegate == null)) {
                this.onEndInitializeDbDelegate = new EndOperationDelegate(this.OnEndInitializeDb);
            }
            if ((this.onInitializeDbCompletedDelegate == null)) {
                this.onInitializeDbCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnInitializeDbCompleted);
            }
            base.InvokeAsync(this.onBeginInitializeDbDelegate, new object[] {
                        strDbName}, this.onEndInitializeDbDelegate, this.onInitializeDbCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result RefreshDb(string strAction, string strDbName, bool bClearAllKeyTables) {
            return base.Channel.RefreshDb(strAction, strDbName, bClearAllKeyTables);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRefreshDb(string strAction, string strDbName, bool bClearAllKeyTables, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRefreshDb(strAction, strDbName, bClearAllKeyTables, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndRefreshDb(System.IAsyncResult result) {
            return base.Channel.EndRefreshDb(result);
        }
        
        private System.IAsyncResult OnBeginRefreshDb(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strAction = ((string)(inValues[0]));
            string strDbName = ((string)(inValues[1]));
            bool bClearAllKeyTables = ((bool)(inValues[2]));
            return this.BeginRefreshDb(strAction, strDbName, bClearAllKeyTables, callback, asyncState);
        }
        
        private object[] OnEndRefreshDb(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndRefreshDb(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRefreshDbCompleted(object state) {
            if ((this.RefreshDbCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RefreshDbCompleted(this, new RefreshDbCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RefreshDbAsync(string strAction, string strDbName, bool bClearAllKeyTables) {
            this.RefreshDbAsync(strAction, strDbName, bClearAllKeyTables, null);
        }
        
        public void RefreshDbAsync(string strAction, string strDbName, bool bClearAllKeyTables, object userState) {
            if ((this.onBeginRefreshDbDelegate == null)) {
                this.onBeginRefreshDbDelegate = new BeginOperationDelegate(this.OnBeginRefreshDb);
            }
            if ((this.onEndRefreshDbDelegate == null)) {
                this.onEndRefreshDbDelegate = new EndOperationDelegate(this.OnEndRefreshDb);
            }
            if ((this.onRefreshDbCompletedDelegate == null)) {
                this.onRefreshDbCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRefreshDbCompleted);
            }
            base.InvokeAsync(this.onBeginRefreshDbDelegate, new object[] {
                        strAction,
                        strDbName,
                        bClearAllKeyTables}, this.onEndRefreshDbDelegate, this.onRefreshDbCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result GetRecords(out DigitalPlatform.rms.Client.rmsws_localhost.Record[] records, string strResultSetName, long lStart, long lLength, string strLang, string strStyle) {
            return base.Channel.GetRecords(out records, strResultSetName, lStart, lLength, strLang, strStyle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRecords(string strResultSetName, long lStart, long lLength, string strLang, string strStyle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRecords(strResultSetName, lStart, lLength, strLang, strStyle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndGetRecords(out DigitalPlatform.rms.Client.rmsws_localhost.Record[] records, System.IAsyncResult result) {
            return base.Channel.EndGetRecords(out records, result);
        }
        
        private System.IAsyncResult OnBeginGetRecords(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strResultSetName = ((string)(inValues[0]));
            long lStart = ((long)(inValues[1]));
            long lLength = ((long)(inValues[2]));
            string strLang = ((string)(inValues[3]));
            string strStyle = ((string)(inValues[4]));
            return this.BeginGetRecords(strResultSetName, lStart, lLength, strLang, strStyle, callback, asyncState);
        }
        
        private object[] OnEndGetRecords(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.Record[] records = this.GetDefaultValueForInitialization<DigitalPlatform.rms.Client.rmsws_localhost.Record[]>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndGetRecords(out records, result);
            return new object[] {
                    records,
                    retVal};
        }
        
        private void OnGetRecordsCompleted(object state) {
            if ((this.GetRecordsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRecordsCompleted(this, new GetRecordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRecordsAsync(string strResultSetName, long lStart, long lLength, string strLang, string strStyle) {
            this.GetRecordsAsync(strResultSetName, lStart, lLength, strLang, strStyle, null);
        }
        
        public void GetRecordsAsync(string strResultSetName, long lStart, long lLength, string strLang, string strStyle, object userState) {
            if ((this.onBeginGetRecordsDelegate == null)) {
                this.onBeginGetRecordsDelegate = new BeginOperationDelegate(this.OnBeginGetRecords);
            }
            if ((this.onEndGetRecordsDelegate == null)) {
                this.onEndGetRecordsDelegate = new EndOperationDelegate(this.OnEndGetRecords);
            }
            if ((this.onGetRecordsCompletedDelegate == null)) {
                this.onGetRecordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRecordsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRecordsDelegate, new object[] {
                        strResultSetName,
                        lStart,
                        lLength,
                        strLang,
                        strStyle}, this.onEndGetRecordsDelegate, this.onGetRecordsCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result GetBrowse(out DigitalPlatform.rms.Client.rmsws_localhost.Record[] records, string[] paths, string strStyle) {
            return base.Channel.GetBrowse(out records, paths, strStyle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetBrowse(string[] paths, string strStyle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetBrowse(paths, strStyle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndGetBrowse(out DigitalPlatform.rms.Client.rmsws_localhost.Record[] records, System.IAsyncResult result) {
            return base.Channel.EndGetBrowse(out records, result);
        }
        
        private System.IAsyncResult OnBeginGetBrowse(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string[] paths = ((string[])(inValues[0]));
            string strStyle = ((string)(inValues[1]));
            return this.BeginGetBrowse(paths, strStyle, callback, asyncState);
        }
        
        private object[] OnEndGetBrowse(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.Record[] records = this.GetDefaultValueForInitialization<DigitalPlatform.rms.Client.rmsws_localhost.Record[]>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndGetBrowse(out records, result);
            return new object[] {
                    records,
                    retVal};
        }
        
        private void OnGetBrowseCompleted(object state) {
            if ((this.GetBrowseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetBrowseCompleted(this, new GetBrowseCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetBrowseAsync(string[] paths, string strStyle) {
            this.GetBrowseAsync(paths, strStyle, null);
        }
        
        public void GetBrowseAsync(string[] paths, string strStyle, object userState) {
            if ((this.onBeginGetBrowseDelegate == null)) {
                this.onBeginGetBrowseDelegate = new BeginOperationDelegate(this.OnBeginGetBrowse);
            }
            if ((this.onEndGetBrowseDelegate == null)) {
                this.onEndGetBrowseDelegate = new EndOperationDelegate(this.OnEndGetBrowse);
            }
            if ((this.onGetBrowseCompletedDelegate == null)) {
                this.onGetBrowseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetBrowseCompleted);
            }
            base.InvokeAsync(this.onBeginGetBrowseDelegate, new object[] {
                        paths,
                        strStyle}, this.onEndGetBrowseDelegate, this.onGetBrowseCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result GetRichRecords(out DigitalPlatform.rms.Client.rmsws_localhost.RichRecord[] richRecords, string strResultSetName, string strRanges, string strLang, string strStyle) {
            return base.Channel.GetRichRecords(out richRecords, strResultSetName, strRanges, strLang, strStyle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRichRecords(string strResultSetName, string strRanges, string strLang, string strStyle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRichRecords(strResultSetName, strRanges, strLang, strStyle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndGetRichRecords(out DigitalPlatform.rms.Client.rmsws_localhost.RichRecord[] richRecords, System.IAsyncResult result) {
            return base.Channel.EndGetRichRecords(out richRecords, result);
        }
        
        private System.IAsyncResult OnBeginGetRichRecords(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strResultSetName = ((string)(inValues[0]));
            string strRanges = ((string)(inValues[1]));
            string strLang = ((string)(inValues[2]));
            string strStyle = ((string)(inValues[3]));
            return this.BeginGetRichRecords(strResultSetName, strRanges, strLang, strStyle, callback, asyncState);
        }
        
        private object[] OnEndGetRichRecords(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.RichRecord[] richRecords = this.GetDefaultValueForInitialization<DigitalPlatform.rms.Client.rmsws_localhost.RichRecord[]>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndGetRichRecords(out richRecords, result);
            return new object[] {
                    richRecords,
                    retVal};
        }
        
        private void OnGetRichRecordsCompleted(object state) {
            if ((this.GetRichRecordsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetRichRecordsCompleted(this, new GetRichRecordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetRichRecordsAsync(string strResultSetName, string strRanges, string strLang, string strStyle) {
            this.GetRichRecordsAsync(strResultSetName, strRanges, strLang, strStyle, null);
        }
        
        public void GetRichRecordsAsync(string strResultSetName, string strRanges, string strLang, string strStyle, object userState) {
            if ((this.onBeginGetRichRecordsDelegate == null)) {
                this.onBeginGetRichRecordsDelegate = new BeginOperationDelegate(this.OnBeginGetRichRecords);
            }
            if ((this.onEndGetRichRecordsDelegate == null)) {
                this.onEndGetRichRecordsDelegate = new EndOperationDelegate(this.OnEndGetRichRecords);
            }
            if ((this.onGetRichRecordsCompletedDelegate == null)) {
                this.onGetRichRecordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetRichRecordsCompleted);
            }
            base.InvokeAsync(this.onBeginGetRichRecordsDelegate, new object[] {
                        strResultSetName,
                        strRanges,
                        strLang,
                        strStyle}, this.onEndGetRichRecordsDelegate, this.onGetRichRecordsCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result GetRes(out byte[] baContent, out string strMetadata, out string strOutputResPath, out byte[] baOutputTimestamp, string strResPath, long nStart, int nLength, string strStyle) {
            return base.Channel.GetRes(out baContent, out strMetadata, out strOutputResPath, out baOutputTimestamp, strResPath, nStart, nLength, strStyle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetRes(string strResPath, long nStart, int nLength, string strStyle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetRes(strResPath, nStart, nLength, strStyle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndGetRes(out byte[] baContent, out string strMetadata, out string strOutputResPath, out byte[] baOutputTimestamp, System.IAsyncResult result) {
            return base.Channel.EndGetRes(out baContent, out strMetadata, out strOutputResPath, out baOutputTimestamp, result);
        }
        
        private System.IAsyncResult OnBeginGetRes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strResPath = ((string)(inValues[0]));
            long nStart = ((long)(inValues[1]));
            int nLength = ((int)(inValues[2]));
            string strStyle = ((string)(inValues[3]));
            return this.BeginGetRes(strResPath, nStart, nLength, strStyle, callback, asyncState);
        }
        
        private object[] OnEndGetRes(System.IAsyncResult result) {
            byte[] baContent = this.GetDefaultValueForInitialization<byte[]>();
            string strMetadata = this.GetDefaultValueForInitialization<string>();
            string strOutputResPath = this.GetDefaultValueForInitialization<string>();
            byte[] baOutputTimestamp = this.GetDefaultValueForInitialization<byte[]>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndGetRes(out baContent, out strMetadata, out strOutputResPath, out baOutputTimestamp, result);
            return new object[] {
                    baContent,
                    strMetadata,
                    strOutputResPath,
                    baOutputTimestamp,
                    retVal};
        }
        
        private void OnGetResCompleted(object state) {
            if ((this.GetResCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetResCompleted(this, new GetResCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetResAsync(string strResPath, long nStart, int nLength, string strStyle) {
            this.GetResAsync(strResPath, nStart, nLength, strStyle, null);
        }
        
        public void GetResAsync(string strResPath, long nStart, int nLength, string strStyle, object userState) {
            if ((this.onBeginGetResDelegate == null)) {
                this.onBeginGetResDelegate = new BeginOperationDelegate(this.OnBeginGetRes);
            }
            if ((this.onEndGetResDelegate == null)) {
                this.onEndGetResDelegate = new EndOperationDelegate(this.OnEndGetRes);
            }
            if ((this.onGetResCompletedDelegate == null)) {
                this.onGetResCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetResCompleted);
            }
            base.InvokeAsync(this.onBeginGetResDelegate, new object[] {
                        strResPath,
                        nStart,
                        nLength,
                        strStyle}, this.onEndGetResDelegate, this.onGetResCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result WriteRes(out string strOutputResPath, out byte[] baOutputTimestamp, string strResPath, string strRanges, long lTotalLength, byte[] baContent, string strMetadata, string strStyle, byte[] baInputTimestamp) {
            return base.Channel.WriteRes(out strOutputResPath, out baOutputTimestamp, strResPath, strRanges, lTotalLength, baContent, strMetadata, strStyle, baInputTimestamp);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWriteRes(string strResPath, string strRanges, long lTotalLength, byte[] baContent, string strMetadata, string strStyle, byte[] baInputTimestamp, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWriteRes(strResPath, strRanges, lTotalLength, baContent, strMetadata, strStyle, baInputTimestamp, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndWriteRes(out string strOutputResPath, out byte[] baOutputTimestamp, System.IAsyncResult result) {
            return base.Channel.EndWriteRes(out strOutputResPath, out baOutputTimestamp, result);
        }
        
        private System.IAsyncResult OnBeginWriteRes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strResPath = ((string)(inValues[0]));
            string strRanges = ((string)(inValues[1]));
            long lTotalLength = ((long)(inValues[2]));
            byte[] baContent = ((byte[])(inValues[3]));
            string strMetadata = ((string)(inValues[4]));
            string strStyle = ((string)(inValues[5]));
            byte[] baInputTimestamp = ((byte[])(inValues[6]));
            return this.BeginWriteRes(strResPath, strRanges, lTotalLength, baContent, strMetadata, strStyle, baInputTimestamp, callback, asyncState);
        }
        
        private object[] OnEndWriteRes(System.IAsyncResult result) {
            string strOutputResPath = this.GetDefaultValueForInitialization<string>();
            byte[] baOutputTimestamp = this.GetDefaultValueForInitialization<byte[]>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndWriteRes(out strOutputResPath, out baOutputTimestamp, result);
            return new object[] {
                    strOutputResPath,
                    baOutputTimestamp,
                    retVal};
        }
        
        private void OnWriteResCompleted(object state) {
            if ((this.WriteResCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WriteResCompleted(this, new WriteResCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WriteResAsync(string strResPath, string strRanges, long lTotalLength, byte[] baContent, string strMetadata, string strStyle, byte[] baInputTimestamp) {
            this.WriteResAsync(strResPath, strRanges, lTotalLength, baContent, strMetadata, strStyle, baInputTimestamp, null);
        }
        
        public void WriteResAsync(string strResPath, string strRanges, long lTotalLength, byte[] baContent, string strMetadata, string strStyle, byte[] baInputTimestamp, object userState) {
            if ((this.onBeginWriteResDelegate == null)) {
                this.onBeginWriteResDelegate = new BeginOperationDelegate(this.OnBeginWriteRes);
            }
            if ((this.onEndWriteResDelegate == null)) {
                this.onEndWriteResDelegate = new EndOperationDelegate(this.OnEndWriteRes);
            }
            if ((this.onWriteResCompletedDelegate == null)) {
                this.onWriteResCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWriteResCompleted);
            }
            base.InvokeAsync(this.onBeginWriteResDelegate, new object[] {
                        strResPath,
                        strRanges,
                        lTotalLength,
                        baContent,
                        strMetadata,
                        strStyle,
                        baInputTimestamp}, this.onEndWriteResDelegate, this.onWriteResCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result WriteRecords(out DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[] results, DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[] inputs, string strStyle) {
            return base.Channel.WriteRecords(out results, inputs, strStyle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWriteRecords(DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[] inputs, string strStyle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWriteRecords(inputs, strStyle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndWriteRecords(out DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[] results, System.IAsyncResult result) {
            return base.Channel.EndWriteRecords(out results, result);
        }
        
        private System.IAsyncResult OnBeginWriteRecords(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[] inputs = ((DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[])(inValues[0]));
            string strStyle = ((string)(inValues[1]));
            return this.BeginWriteRecords(inputs, strStyle, callback, asyncState);
        }
        
        private object[] OnEndWriteRecords(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[] results = this.GetDefaultValueForInitialization<DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[]>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndWriteRecords(out results, result);
            return new object[] {
                    results,
                    retVal};
        }
        
        private void OnWriteRecordsCompleted(object state) {
            if ((this.WriteRecordsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WriteRecordsCompleted(this, new WriteRecordsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WriteRecordsAsync(DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[] inputs, string strStyle) {
            this.WriteRecordsAsync(inputs, strStyle, null);
        }
        
        public void WriteRecordsAsync(DigitalPlatform.rms.Client.rmsws_localhost.RecordBody[] inputs, string strStyle, object userState) {
            if ((this.onBeginWriteRecordsDelegate == null)) {
                this.onBeginWriteRecordsDelegate = new BeginOperationDelegate(this.OnBeginWriteRecords);
            }
            if ((this.onEndWriteRecordsDelegate == null)) {
                this.onEndWriteRecordsDelegate = new EndOperationDelegate(this.OnEndWriteRecords);
            }
            if ((this.onWriteRecordsCompletedDelegate == null)) {
                this.onWriteRecordsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWriteRecordsCompleted);
            }
            base.InvokeAsync(this.onBeginWriteRecordsDelegate, new object[] {
                        inputs,
                        strStyle}, this.onEndWriteRecordsDelegate, this.onWriteRecordsCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result DeleteRes(out byte[] baOutputTimestamp, string strResPath, byte[] baInputTimestamp, string strStyle) {
            return base.Channel.DeleteRes(out baOutputTimestamp, strResPath, baInputTimestamp, strStyle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteRes(string strResPath, byte[] baInputTimestamp, string strStyle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteRes(strResPath, baInputTimestamp, strStyle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndDeleteRes(out byte[] baOutputTimestamp, System.IAsyncResult result) {
            return base.Channel.EndDeleteRes(out baOutputTimestamp, result);
        }
        
        private System.IAsyncResult OnBeginDeleteRes(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strResPath = ((string)(inValues[0]));
            byte[] baInputTimestamp = ((byte[])(inValues[1]));
            string strStyle = ((string)(inValues[2]));
            return this.BeginDeleteRes(strResPath, baInputTimestamp, strStyle, callback, asyncState);
        }
        
        private object[] OnEndDeleteRes(System.IAsyncResult result) {
            byte[] baOutputTimestamp = this.GetDefaultValueForInitialization<byte[]>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndDeleteRes(out baOutputTimestamp, result);
            return new object[] {
                    baOutputTimestamp,
                    retVal};
        }
        
        private void OnDeleteResCompleted(object state) {
            if ((this.DeleteResCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteResCompleted(this, new DeleteResCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteResAsync(string strResPath, byte[] baInputTimestamp, string strStyle) {
            this.DeleteResAsync(strResPath, baInputTimestamp, strStyle, null);
        }
        
        public void DeleteResAsync(string strResPath, byte[] baInputTimestamp, string strStyle, object userState) {
            if ((this.onBeginDeleteResDelegate == null)) {
                this.onBeginDeleteResDelegate = new BeginOperationDelegate(this.OnBeginDeleteRes);
            }
            if ((this.onEndDeleteResDelegate == null)) {
                this.onEndDeleteResDelegate = new EndOperationDelegate(this.OnEndDeleteRes);
            }
            if ((this.onDeleteResCompletedDelegate == null)) {
                this.onDeleteResCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteResCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteResDelegate, new object[] {
                        strResPath,
                        baInputTimestamp,
                        strStyle}, this.onEndDeleteResDelegate, this.onDeleteResCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result RebuildResKeys(out string strOutputResPath, string strResPath, string strStyle) {
            return base.Channel.RebuildResKeys(out strOutputResPath, strResPath, strStyle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRebuildResKeys(string strResPath, string strStyle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRebuildResKeys(strResPath, strStyle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndRebuildResKeys(out string strOutputResPath, System.IAsyncResult result) {
            return base.Channel.EndRebuildResKeys(out strOutputResPath, result);
        }
        
        private System.IAsyncResult OnBeginRebuildResKeys(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strResPath = ((string)(inValues[0]));
            string strStyle = ((string)(inValues[1]));
            return this.BeginRebuildResKeys(strResPath, strStyle, callback, asyncState);
        }
        
        private object[] OnEndRebuildResKeys(System.IAsyncResult result) {
            string strOutputResPath = this.GetDefaultValueForInitialization<string>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndRebuildResKeys(out strOutputResPath, result);
            return new object[] {
                    strOutputResPath,
                    retVal};
        }
        
        private void OnRebuildResKeysCompleted(object state) {
            if ((this.RebuildResKeysCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RebuildResKeysCompleted(this, new RebuildResKeysCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RebuildResKeysAsync(string strResPath, string strStyle) {
            this.RebuildResKeysAsync(strResPath, strStyle, null);
        }
        
        public void RebuildResKeysAsync(string strResPath, string strStyle, object userState) {
            if ((this.onBeginRebuildResKeysDelegate == null)) {
                this.onBeginRebuildResKeysDelegate = new BeginOperationDelegate(this.OnBeginRebuildResKeys);
            }
            if ((this.onEndRebuildResKeysDelegate == null)) {
                this.onEndRebuildResKeysDelegate = new EndOperationDelegate(this.OnEndRebuildResKeys);
            }
            if ((this.onRebuildResKeysCompletedDelegate == null)) {
                this.onRebuildResKeysCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRebuildResKeysCompleted);
            }
            base.InvokeAsync(this.onBeginRebuildResKeysDelegate, new object[] {
                        strResPath,
                        strStyle}, this.onEndRebuildResKeysDelegate, this.onRebuildResKeysCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result SetDbInfo(string strDbName, DigitalPlatform.rms.LogicNameItem[] logicNames, string strType, string strSqlDbName, string strKeysText, string strBrowseText) {
            return base.Channel.SetDbInfo(strDbName, logicNames, strType, strSqlDbName, strKeysText, strBrowseText);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSetDbInfo(string strDbName, DigitalPlatform.rms.LogicNameItem[] logicNames, string strType, string strSqlDbName, string strKeysText, string strBrowseText, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSetDbInfo(strDbName, logicNames, strType, strSqlDbName, strKeysText, strBrowseText, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndSetDbInfo(System.IAsyncResult result) {
            return base.Channel.EndSetDbInfo(result);
        }
        
        private System.IAsyncResult OnBeginSetDbInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strDbName = ((string)(inValues[0]));
            DigitalPlatform.rms.LogicNameItem[] logicNames = ((DigitalPlatform.rms.LogicNameItem[])(inValues[1]));
            string strType = ((string)(inValues[2]));
            string strSqlDbName = ((string)(inValues[3]));
            string strKeysText = ((string)(inValues[4]));
            string strBrowseText = ((string)(inValues[5]));
            return this.BeginSetDbInfo(strDbName, logicNames, strType, strSqlDbName, strKeysText, strBrowseText, callback, asyncState);
        }
        
        private object[] OnEndSetDbInfo(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndSetDbInfo(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSetDbInfoCompleted(object state) {
            if ((this.SetDbInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SetDbInfoCompleted(this, new SetDbInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SetDbInfoAsync(string strDbName, DigitalPlatform.rms.LogicNameItem[] logicNames, string strType, string strSqlDbName, string strKeysText, string strBrowseText) {
            this.SetDbInfoAsync(strDbName, logicNames, strType, strSqlDbName, strKeysText, strBrowseText, null);
        }
        
        public void SetDbInfoAsync(string strDbName, DigitalPlatform.rms.LogicNameItem[] logicNames, string strType, string strSqlDbName, string strKeysText, string strBrowseText, object userState) {
            if ((this.onBeginSetDbInfoDelegate == null)) {
                this.onBeginSetDbInfoDelegate = new BeginOperationDelegate(this.OnBeginSetDbInfo);
            }
            if ((this.onEndSetDbInfoDelegate == null)) {
                this.onEndSetDbInfoDelegate = new EndOperationDelegate(this.OnEndSetDbInfo);
            }
            if ((this.onSetDbInfoCompletedDelegate == null)) {
                this.onSetDbInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSetDbInfoCompleted);
            }
            base.InvokeAsync(this.onBeginSetDbInfoDelegate, new object[] {
                        strDbName,
                        logicNames,
                        strType,
                        strSqlDbName,
                        strKeysText,
                        strBrowseText}, this.onEndSetDbInfoDelegate, this.onSetDbInfoCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result GetDbInfo(out DigitalPlatform.rms.LogicNameItem[] logicNames, out string strType, out string strSqlDbName, out string strKeysText, out string strBrowseText, string strDbName, string strStyle) {
            return base.Channel.GetDbInfo(out logicNames, out strType, out strSqlDbName, out strKeysText, out strBrowseText, strDbName, strStyle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetDbInfo(string strDbName, string strStyle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetDbInfo(strDbName, strStyle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndGetDbInfo(out DigitalPlatform.rms.LogicNameItem[] logicNames, out string strType, out string strSqlDbName, out string strKeysText, out string strBrowseText, System.IAsyncResult result) {
            return base.Channel.EndGetDbInfo(out logicNames, out strType, out strSqlDbName, out strKeysText, out strBrowseText, result);
        }
        
        private System.IAsyncResult OnBeginGetDbInfo(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strDbName = ((string)(inValues[0]));
            string strStyle = ((string)(inValues[1]));
            return this.BeginGetDbInfo(strDbName, strStyle, callback, asyncState);
        }
        
        private object[] OnEndGetDbInfo(System.IAsyncResult result) {
            DigitalPlatform.rms.LogicNameItem[] logicNames = this.GetDefaultValueForInitialization<DigitalPlatform.rms.LogicNameItem[]>();
            string strType = this.GetDefaultValueForInitialization<string>();
            string strSqlDbName = this.GetDefaultValueForInitialization<string>();
            string strKeysText = this.GetDefaultValueForInitialization<string>();
            string strBrowseText = this.GetDefaultValueForInitialization<string>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndGetDbInfo(out logicNames, out strType, out strSqlDbName, out strKeysText, out strBrowseText, result);
            return new object[] {
                    logicNames,
                    strType,
                    strSqlDbName,
                    strKeysText,
                    strBrowseText,
                    retVal};
        }
        
        private void OnGetDbInfoCompleted(object state) {
            if ((this.GetDbInfoCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetDbInfoCompleted(this, new GetDbInfoCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetDbInfoAsync(string strDbName, string strStyle) {
            this.GetDbInfoAsync(strDbName, strStyle, null);
        }
        
        public void GetDbInfoAsync(string strDbName, string strStyle, object userState) {
            if ((this.onBeginGetDbInfoDelegate == null)) {
                this.onBeginGetDbInfoDelegate = new BeginOperationDelegate(this.OnBeginGetDbInfo);
            }
            if ((this.onEndGetDbInfoDelegate == null)) {
                this.onEndGetDbInfoDelegate = new EndOperationDelegate(this.OnEndGetDbInfo);
            }
            if ((this.onGetDbInfoCompletedDelegate == null)) {
                this.onGetDbInfoCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetDbInfoCompleted);
            }
            base.InvokeAsync(this.onBeginGetDbInfoDelegate, new object[] {
                        strDbName,
                        strStyle}, this.onEndGetDbInfoDelegate, this.onGetDbInfoCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result CreateDb(DigitalPlatform.rms.LogicNameItem[] logicNames, string strType, string strSqlDbName, string strKeysDefault, string strBrowseDefault) {
            return base.Channel.CreateDb(logicNames, strType, strSqlDbName, strKeysDefault, strBrowseDefault);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateDb(DigitalPlatform.rms.LogicNameItem[] logicNames, string strType, string strSqlDbName, string strKeysDefault, string strBrowseDefault, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateDb(logicNames, strType, strSqlDbName, strKeysDefault, strBrowseDefault, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndCreateDb(System.IAsyncResult result) {
            return base.Channel.EndCreateDb(result);
        }
        
        private System.IAsyncResult OnBeginCreateDb(object[] inValues, System.AsyncCallback callback, object asyncState) {
            DigitalPlatform.rms.LogicNameItem[] logicNames = ((DigitalPlatform.rms.LogicNameItem[])(inValues[0]));
            string strType = ((string)(inValues[1]));
            string strSqlDbName = ((string)(inValues[2]));
            string strKeysDefault = ((string)(inValues[3]));
            string strBrowseDefault = ((string)(inValues[4]));
            return this.BeginCreateDb(logicNames, strType, strSqlDbName, strKeysDefault, strBrowseDefault, callback, asyncState);
        }
        
        private object[] OnEndCreateDb(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndCreateDb(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateDbCompleted(object state) {
            if ((this.CreateDbCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateDbCompleted(this, new CreateDbCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateDbAsync(DigitalPlatform.rms.LogicNameItem[] logicNames, string strType, string strSqlDbName, string strKeysDefault, string strBrowseDefault) {
            this.CreateDbAsync(logicNames, strType, strSqlDbName, strKeysDefault, strBrowseDefault, null);
        }
        
        public void CreateDbAsync(DigitalPlatform.rms.LogicNameItem[] logicNames, string strType, string strSqlDbName, string strKeysDefault, string strBrowseDefault, object userState) {
            if ((this.onBeginCreateDbDelegate == null)) {
                this.onBeginCreateDbDelegate = new BeginOperationDelegate(this.OnBeginCreateDb);
            }
            if ((this.onEndCreateDbDelegate == null)) {
                this.onEndCreateDbDelegate = new EndOperationDelegate(this.OnEndCreateDb);
            }
            if ((this.onCreateDbCompletedDelegate == null)) {
                this.onCreateDbCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateDbCompleted);
            }
            base.InvokeAsync(this.onBeginCreateDbDelegate, new object[] {
                        logicNames,
                        strType,
                        strSqlDbName,
                        strKeysDefault,
                        strBrowseDefault}, this.onEndCreateDbDelegate, this.onCreateDbCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result DeleteDb(string strDbName) {
            return base.Channel.DeleteDb(strDbName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDeleteDb(string strDbName, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDeleteDb(strDbName, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndDeleteDb(System.IAsyncResult result) {
            return base.Channel.EndDeleteDb(result);
        }
        
        private System.IAsyncResult OnBeginDeleteDb(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strDbName = ((string)(inValues[0]));
            return this.BeginDeleteDb(strDbName, callback, asyncState);
        }
        
        private object[] OnEndDeleteDb(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndDeleteDb(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteDbCompleted(object state) {
            if ((this.DeleteDbCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteDbCompleted(this, new DeleteDbCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteDbAsync(string strDbName) {
            this.DeleteDbAsync(strDbName, null);
        }
        
        public void DeleteDbAsync(string strDbName, object userState) {
            if ((this.onBeginDeleteDbDelegate == null)) {
                this.onBeginDeleteDbDelegate = new BeginOperationDelegate(this.OnBeginDeleteDb);
            }
            if ((this.onEndDeleteDbDelegate == null)) {
                this.onEndDeleteDbDelegate = new EndOperationDelegate(this.OnEndDeleteDb);
            }
            if ((this.onDeleteDbCompletedDelegate == null)) {
                this.onDeleteDbCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteDbCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDbDelegate, new object[] {
                        strDbName}, this.onEndDeleteDbDelegate, this.onDeleteDbCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result CreateKeys(out DigitalPlatform.rms.Client.rmsws_localhost.KeyInfo[] keys, string strXml, string strRecPath, int lStart, int lLength, string strLang) {
            return base.Channel.CreateKeys(out keys, strXml, strRecPath, lStart, lLength, strLang);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCreateKeys(string strXml, string strRecPath, int lStart, int lLength, string strLang, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateKeys(strXml, strRecPath, lStart, lLength, strLang, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndCreateKeys(out DigitalPlatform.rms.Client.rmsws_localhost.KeyInfo[] keys, System.IAsyncResult result) {
            return base.Channel.EndCreateKeys(out keys, result);
        }
        
        private System.IAsyncResult OnBeginCreateKeys(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strXml = ((string)(inValues[0]));
            string strRecPath = ((string)(inValues[1]));
            int lStart = ((int)(inValues[2]));
            int lLength = ((int)(inValues[3]));
            string strLang = ((string)(inValues[4]));
            return this.BeginCreateKeys(strXml, strRecPath, lStart, lLength, strLang, callback, asyncState);
        }
        
        private object[] OnEndCreateKeys(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.KeyInfo[] keys = this.GetDefaultValueForInitialization<DigitalPlatform.rms.Client.rmsws_localhost.KeyInfo[]>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndCreateKeys(out keys, result);
            return new object[] {
                    keys,
                    retVal};
        }
        
        private void OnCreateKeysCompleted(object state) {
            if ((this.CreateKeysCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateKeysCompleted(this, new CreateKeysCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateKeysAsync(string strXml, string strRecPath, int lStart, int lLength, string strLang) {
            this.CreateKeysAsync(strXml, strRecPath, lStart, lLength, strLang, null);
        }
        
        public void CreateKeysAsync(string strXml, string strRecPath, int lStart, int lLength, string strLang, object userState) {
            if ((this.onBeginCreateKeysDelegate == null)) {
                this.onBeginCreateKeysDelegate = new BeginOperationDelegate(this.OnBeginCreateKeys);
            }
            if ((this.onEndCreateKeysDelegate == null)) {
                this.onEndCreateKeysDelegate = new EndOperationDelegate(this.OnEndCreateKeys);
            }
            if ((this.onCreateKeysCompletedDelegate == null)) {
                this.onCreateKeysCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateKeysCompleted);
            }
            base.InvokeAsync(this.onBeginCreateKeysDelegate, new object[] {
                        strXml,
                        strRecPath,
                        lStart,
                        lLength,
                        strLang}, this.onEndCreateKeysDelegate, this.onCreateKeysCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result CopyRecord(out string strIdChangeList, out string strOutputRecordPath, out byte[] baOutputRecordTimestamp, string strOriginRecordPath, string strTargetRecordPath, bool bDeleteOriginRecord, string strMergeStyle) {
            return base.Channel.CopyRecord(out strIdChangeList, out strOutputRecordPath, out baOutputRecordTimestamp, strOriginRecordPath, strTargetRecordPath, bDeleteOriginRecord, strMergeStyle);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginCopyRecord(string strOriginRecordPath, string strTargetRecordPath, bool bDeleteOriginRecord, string strMergeStyle, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCopyRecord(strOriginRecordPath, strTargetRecordPath, bDeleteOriginRecord, strMergeStyle, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndCopyRecord(out string strIdChangeList, out string strOutputRecordPath, out byte[] baOutputRecordTimestamp, System.IAsyncResult result) {
            return base.Channel.EndCopyRecord(out strIdChangeList, out strOutputRecordPath, out baOutputRecordTimestamp, result);
        }
        
        private System.IAsyncResult OnBeginCopyRecord(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strOriginRecordPath = ((string)(inValues[0]));
            string strTargetRecordPath = ((string)(inValues[1]));
            bool bDeleteOriginRecord = ((bool)(inValues[2]));
            string strMergeStyle = ((string)(inValues[3]));
            return this.BeginCopyRecord(strOriginRecordPath, strTargetRecordPath, bDeleteOriginRecord, strMergeStyle, callback, asyncState);
        }
        
        private object[] OnEndCopyRecord(System.IAsyncResult result) {
            string strIdChangeList = this.GetDefaultValueForInitialization<string>();
            string strOutputRecordPath = this.GetDefaultValueForInitialization<string>();
            byte[] baOutputRecordTimestamp = this.GetDefaultValueForInitialization<byte[]>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndCopyRecord(out strIdChangeList, out strOutputRecordPath, out baOutputRecordTimestamp, result);
            return new object[] {
                    strIdChangeList,
                    strOutputRecordPath,
                    baOutputRecordTimestamp,
                    retVal};
        }
        
        private void OnCopyRecordCompleted(object state) {
            if ((this.CopyRecordCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CopyRecordCompleted(this, new CopyRecordCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CopyRecordAsync(string strOriginRecordPath, string strTargetRecordPath, bool bDeleteOriginRecord, string strMergeStyle) {
            this.CopyRecordAsync(strOriginRecordPath, strTargetRecordPath, bDeleteOriginRecord, strMergeStyle, null);
        }
        
        public void CopyRecordAsync(string strOriginRecordPath, string strTargetRecordPath, bool bDeleteOriginRecord, string strMergeStyle, object userState) {
            if ((this.onBeginCopyRecordDelegate == null)) {
                this.onBeginCopyRecordDelegate = new BeginOperationDelegate(this.OnBeginCopyRecord);
            }
            if ((this.onEndCopyRecordDelegate == null)) {
                this.onEndCopyRecordDelegate = new EndOperationDelegate(this.OnEndCopyRecord);
            }
            if ((this.onCopyRecordCompletedDelegate == null)) {
                this.onCopyRecordCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCopyRecordCompleted);
            }
            base.InvokeAsync(this.onBeginCopyRecordDelegate, new object[] {
                        strOriginRecordPath,
                        strTargetRecordPath,
                        bDeleteOriginRecord,
                        strMergeStyle}, this.onEndCopyRecordDelegate, this.onCopyRecordCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result BatchTask(out DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo[] results, string strName, string strAction, DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo info) {
            return base.Channel.BatchTask(out results, strName, strAction, info);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginBatchTask(string strName, string strAction, DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo info, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginBatchTask(strName, strAction, info, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndBatchTask(out DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo[] results, System.IAsyncResult result) {
            return base.Channel.EndBatchTask(out results, result);
        }
        
        private System.IAsyncResult OnBeginBatchTask(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string strName = ((string)(inValues[0]));
            string strAction = ((string)(inValues[1]));
            DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo info = ((DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo)(inValues[2]));
            return this.BeginBatchTask(strName, strAction, info, callback, asyncState);
        }
        
        private object[] OnEndBatchTask(System.IAsyncResult result) {
            DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo[] results = this.GetDefaultValueForInitialization<DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo[]>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndBatchTask(out results, result);
            return new object[] {
                    results,
                    retVal};
        }
        
        private void OnBatchTaskCompleted(object state) {
            if ((this.BatchTaskCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.BatchTaskCompleted(this, new BatchTaskCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void BatchTaskAsync(string strName, string strAction, DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo info) {
            this.BatchTaskAsync(strName, strAction, info, null);
        }
        
        public void BatchTaskAsync(string strName, string strAction, DigitalPlatform.rms.Client.rmsws_localhost.TaskInfo info, object userState) {
            if ((this.onBeginBatchTaskDelegate == null)) {
                this.onBeginBatchTaskDelegate = new BeginOperationDelegate(this.OnBeginBatchTask);
            }
            if ((this.onEndBatchTaskDelegate == null)) {
                this.onEndBatchTaskDelegate = new EndOperationDelegate(this.OnEndBatchTask);
            }
            if ((this.onBatchTaskCompletedDelegate == null)) {
                this.onBatchTaskCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnBatchTaskCompleted);
            }
            base.InvokeAsync(this.onBeginBatchTaskDelegate, new object[] {
                        strName,
                        strAction,
                        info}, this.onEndBatchTaskDelegate, this.onBatchTaskCompletedDelegate, userState);
        }
        
        public DigitalPlatform.rms.Client.rmsws_localhost.Result GetProperty(out string strProperty) {
            return base.Channel.GetProperty(out strProperty);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetProperty(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetProperty(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public DigitalPlatform.rms.Client.rmsws_localhost.Result EndGetProperty(out string strProperty, System.IAsyncResult result) {
            return base.Channel.EndGetProperty(out strProperty, result);
        }
        
        private System.IAsyncResult OnBeginGetProperty(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetProperty(callback, asyncState);
        }
        
        private object[] OnEndGetProperty(System.IAsyncResult result) {
            string strProperty = this.GetDefaultValueForInitialization<string>();
            DigitalPlatform.rms.Client.rmsws_localhost.Result retVal = this.EndGetProperty(out strProperty, result);
            return new object[] {
                    strProperty,
                    retVal};
        }
        
        private void OnGetPropertyCompleted(object state) {
            if ((this.GetPropertyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPropertyCompleted(this, new GetPropertyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPropertyAsync() {
            this.GetPropertyAsync(null);
        }
        
        public void GetPropertyAsync(object userState) {
            if ((this.onBeginGetPropertyDelegate == null)) {
                this.onBeginGetPropertyDelegate = new BeginOperationDelegate(this.OnBeginGetProperty);
            }
            if ((this.onEndGetPropertyDelegate == null)) {
                this.onEndGetPropertyDelegate = new EndOperationDelegate(this.OnEndGetProperty);
            }
            if ((this.onGetPropertyCompletedDelegate == null)) {
                this.onGetPropertyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPropertyCompleted);
            }
            base.InvokeAsync(this.onBeginGetPropertyDelegate, null, this.onEndGetPropertyDelegate, this.onGetPropertyCompletedDelegate, userState);
        }
    }
}
