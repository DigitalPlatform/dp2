<?xml version="1.0" encoding="utf-8"?>
<root>


  <script>
    <![CDATA[

using System;
using System.Xml;
using System.Text;
using DigitalPlatform.rms;
using DigitalPlatform.IO;
using DigitalPlatform.Text;

public class MyKeysHost : KeysHost
{
	public void getParentLocation()
	{
  	XmlNode	node = this.DataDom.SelectSingleNode("//parent");
		if (node == null)
			return;

		string strParent = node.InnerText;
    
		node = this.DataDom.SelectSingleNode("//location");
    if (node == null)
		{
			this.ResultString = strParent + "|";
			return;
		}

		string strLocation = node.InnerText;

		strLocation = GetPureLocation(strLocation);
    // 将 "保存本库" 这样的校正为 "/保存本库"，以便于检索馆代码为空的记录
	  if (string.IsNullOrEmpty(strLocation) == false)
    {
        int nRet = strLocation.IndexOf("/");
        if (nRet == -1)
          strLocation = "/" + strLocation;
    }
		this.ResultString = strParent + "|" + strLocation;
	}
  
	public void getAccessNo()
	{
		XmlNode node = this.DataDom.SelectSingleNode("//accessNo");
		if (node == null)
		{
			this.ResultString = "";
			return;
		}

		string strAccessNo = node.InnerText;

		this.ResultString = GetPlainTextCallNumber(strAccessNo);
	}

	public void getLocationClass()
	{
		XmlNode node = this.DataDom.SelectSingleNode("//location");
		if (node == null)
			return;

		string strLocation = node.InnerText;

		strLocation = GetPureLocation(strLocation);

		node = this.DataDom.SelectSingleNode("//accessNo");
		if (node == null)
		{
			this.ResultString = strLocation + "|";
			return;
		}

		string strAccessNo = BuildLocationClassEntry(node.InnerText);
	
		this.ResultString = strLocation + "|" + strAccessNo;
	}

	// 获得纯净的馆藏地点字符串
	// dp2册记录中的<location>元素内容，有可能是类似"流通库,#reservation"这样的复杂字符串(表示在预约保留架上)。本函数专门提取非#号引导的第一部分
	static string GetPureLocation(string strLocation)
	{
		strLocation = strLocation.Trim();
	
		string [] parts = strLocation.Split(new char [] {','});
		if (parts.Length <= 1)
			return strLocation;

		for(int i=0;i<parts.Length;i++)
		{
			string strPart = parts[i].Trim();
			if (String.IsNullOrEmpty(strPart) == true)
				continue;
			if (strPart[0] != '#')
				return strPart;
		}

		return "";
	}

        // 根据册记录中<accessNo>元素中的原始字符串创建 LocationClass 字符串
        public static string BuildLocationClassEntry(string strCallNumber)
        {
            StringBuilder result = new StringBuilder(4096);
            string [] lines = strCallNumber.Split(new char [] {'/'});
            foreach(string line in lines)
            {
                string strLine = line.Trim();

                // 去掉"{ns}"开头的行
                if (strLine.Length > 0 && strLine[0] == '{')
                {
                    int nRet = strLine.IndexOf("}");
                    if (nRet != -1)
                    {
                        string strCmd = strLine.Substring(0, nRet + 1).Trim().ToLower();
                        if (strCmd == "{ns}")
                            continue;
                        // 否则也要去掉命令部分
                        strLine = strLine.Substring(nRet + 1).Trim();
                    }
                }

                if (result.Length > 0)
                    result.Append("/");
                result.Append(strLine);
            }

            return result.ToString();
        }

        // 获得纯净的索取号字符串
        public static string GetPlainTextCallNumber(string strCallNumber)
        {
            if (strCallNumber.IndexOf("{") == -1)
                return strCallNumber;

            StringBuilder result = new StringBuilder(4096);
            string[] lines = strCallNumber.Split(new char [] {'/'});
            foreach (string line in lines)
            {
                string strLine = line.Trim();

                // 去掉"{XXX}"开头的部分
                if (strLine.Length > 0 && strLine[0] == '{')
                {
                    int nRet = strLine.IndexOf("}");
                    if (nRet != -1)
                        strLine = strLine.Substring(nRet + 1).Trim();
                }

                if (result.Length > 0)
                    result.Append("/");
                result.Append(strLine);
            }

            return result.ToString();
        }

	public void getLocationBarcode()
	{
		XmlNode node = this.DataDom.SelectSingleNode("//location");

		string strLocation = "";
		if (node != null)
			strLocation = node.InnerText;

		strLocation = dp2StringUtil.GetLibraryCode( GetPureLocation(strLocation) );

		node = this.DataDom.SelectSingleNode("//barcode");
		if (node == null)
		{
			this.ResultString = strLocation + "|";
			return;
		}

		this.ResultString = strLocation + "|" + node.InnerText;
	}
}


]]><refs>
      <ref>system.dll</ref>
      <ref>system.xml.dll</ref>
      <ref>%bindir%\digitalplatform.io.dll</ref>
    </refs>
  </script>

  <key>
    <xpath>*/barcode</xpath>
    <from>barcode</from>
    <table ref="barcode" />
  </key>
  <table name="barcode" id="2">
    <caption lang="zh-CN">册条码号</caption>
    <caption lang="zh-CN">册条码</caption>
    <caption lang="en">barcode</caption>
  </table>
  <key>
    <xpath>*/batchNo</xpath>
    <from>batchno</from>
    <table ref="batchno" />
  </key>
  <table name="batchno" id="3">
    <caption lang="zh-CN">批次号</caption>
    <caption lang="en">Batch No</caption>
  </table>
  <key>
    <xpath>*/registerNo</xpath>
    <from>registerno</from>
    <table ref="registerno" />
  </key>
  <table name="registerno" id="4">
    <caption lang="zh-CN">登录号</caption>
    <caption lang="en">Register No</caption>
  </table>

  <key>
    <xpath scripting="on">getAccessNo</xpath>
    <from>accessNo</from>
    <table ref="accessNo" />
  </key>
  <table name="accessNo" id="5">
    <convert>
      <string style="upper"/>
    </convert>
    <convertquery>
      <string style="upper" />
    </convertquery>
    <caption lang="zh-CN">索取号</caption>
    <caption lang="en">Call Number</caption>
  </table>

  <key>
    <xpath>*/location</xpath>
    <from>location</from>
    <table ref="location" />
  </key>
  <table name="location" id="6">
    <convert>
      <string style="split,upper"/>
    </convert>
    <convertquery>
      <string style="upper" />
    </convertquery>
    <caption lang="zh-CN">馆藏地点</caption>
    <caption lang="en">Location</caption>
  </table>

  <key>
    <xpath>*/refID</xpath>
    <from>refID</from>
    <table ref="refID" />
  </key>
  <table name="refID" id="7">
    <caption lang="zh-CN">参考ID</caption>
    <caption lang="en">Reference ID</caption>
  </table>

  <key>
    <xpath scripting="on">getLocationClass</xpath>
    <from>loccls</from>
    <table ref="locationclass" />
  </key>
  <table name="locationclass" id="8">
    <convert>
      <string style="upper" />
    </convert>
    <convertquery>
      <string style="upper" />
    </convertquery>
    <caption lang="zh-CN">索取类号</caption>
    <caption lang="en">Location Class</caption>
  </table>

  <key>
    <xpath>*/parent</xpath>
    <from>parent</from>
    <table ref="parent" />
  </key>
  <table name="parent" id="1">
    <caption lang="zh-CN">父记录</caption>
    <caption lang="en">Parent</caption>
  </table>

  <key>
    <xpath>*/state</xpath>
    <from>state</from>
    <table ref="state" />
  </key>
  <table name="state" id="9">
    <convert>
      <string style="split,upper"/>
    </convert>
    <convertquery>
      <string style="upper" />
    </convertquery>
    <caption lang="zh-CN">状态</caption>
    <caption lang="en">State</caption>
  </table>

  <key>
    <xpath scripting="on">getParentLocation</xpath>
    <from>parentloc</from>
    <table ref="parentlocation" />
  </key>
  <table name="parentlocation" id="10">
    <convert>
      <string style="" />
    </convert>
    <convertquery>
      <string style="" />
    </convertquery>
    <caption lang="zh-CN">父记录+馆藏地点</caption>
    <caption lang="en">Parent+Location</caption>
  </table>
  
  <key>
    <xpath>*/operations/operation[@name='create']/@time</xpath>
    <from>operTime</from>
    <table ref="createTime" />
  </key>
  <table name="createTime" id="11" type="createTime">
    <convert>
      <number style="rfc1123time" />
    </convert>
    <convertquery>
      <number style="utime" />
    </convertquery>
    <caption lang="zh-CN">创建时间</caption>
    <caption lang="en">CreateTime</caption>
  </table>

  <key>
    <xpath>*/shelfNo</xpath>
    <from>shelfno</from>
    <table ref="shelfno" />
  </key>
  <table name="shelfno" id="12">
    <caption lang="zh-CN">架号</caption>
    <caption lang="en">Shelf No</caption>
  </table>

  <key>
    <xpath scripting="on">getLocationBarcode</xpath>
    <from>locbcd</from>
    <table ref="locationbarcode" />
  </key>
  <table name="locationbarcode" id="13">
    <caption lang="zh-CN">馆代码+册条码号</caption>
    <caption lang="en">Library Barcode</caption>
  </table>

  <key>
    <xpath>*/uid</xpath>
    <from>uid</from>
    <table ref="uid" />
  </key>
  <table name="uid" id="14">
    <caption lang="zh-CN">RFID UID</caption>
    <caption lang="en">RFID UID</caption>
  </table>

  <!-- ******************配置非用字**************************************** -->
  <stopword>
    <stopwordTable name="title">
      <separator>
        <t>,</t>
        <t>_</t>
        <t>.</t>
        <t>:</t>
        <t>;</t>
        <t>!</t>
        <t>"</t>
        <t>'</t>
        <t>-</t>
        <t>，</t>
        <t>。</t>
        <t>‘</t>
        <t>’</t>
        <t>“</t>
        <t>”</t>
        <t>—</t>
      </separator>
      <word>
        <t>the</t>
        <t>a</t>
      </word>
    </stopwordTable>
  </stopword>
</root>